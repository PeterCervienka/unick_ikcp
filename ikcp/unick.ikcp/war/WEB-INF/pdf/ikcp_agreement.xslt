<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2013 rel. 2 sp2 (x64) - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link sps xbrldi xbrli xlink xs xsi">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:decimal-format name="format1" grouping-separator="Â " decimal-separator=","/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="page-master-0-even" margin-left="2cm" margin-right="2cm" page-height="11.69in" page-width="8.27in" margin-top="0.8cm" margin-bottom="0.8cm">
				<fo:region-body margin-top="1.20cm" margin-bottom="1.20cm" column-gap="0.50in"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.20cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-0-odd" margin-left="2cm" margin-right="2cm" page-height="11.69in" page-width="8.27in" margin-top="0.8cm" margin-bottom="0.8cm">
				<fo:region-body margin-top="1.20cm" margin-bottom="1.20cm" column-gap="0.50in"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.20cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-0-even-first" margin-left="2cm" margin-right="2cm" page-height="11.69in" page-width="8.27in" margin-top="0.8cm" margin-bottom="0.8cm">
				<fo:region-body margin-top="0.20cm" margin-bottom="1.20cm" column-gap="0.50in"/>
				<fo:region-before region-name="even-page-header" overflow="hidden" extent="0.20cm"/>
				<fo:region-after region-name="even-page-footer-first" overflow="hidden" extent="1.20cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-0-odd-first" margin-left="2cm" margin-right="2cm" page-height="11.69in" page-width="8.27in" margin-top="0.8cm" margin-bottom="0.8cm">
				<fo:region-body margin-top="0.20cm" margin-bottom="1.20cm" column-gap="0.50in"/>
				<fo:region-before region-name="odd-page-header" overflow="hidden" extent="0.20cm"/>
				<fo:region-after region-name="odd-page-footer-first" overflow="hidden" extent="1.20cm"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-0">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-0-even-first" odd-or-even="even" page-position="first"/>
					<fo:conditional-page-master-reference master-reference="page-master-0-odd-first" odd-or-even="odd" page-position="first"/>
					<fo:conditional-page-master-reference master-reference="page-master-0-even" odd-or-even="even"/>
					<fo:conditional-page-master-reference master-reference="page-master-0-odd" odd-or-even="odd"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:declarations>
				<x:xmpmeta xmlns:x="adobe:ns:meta/">
					<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
						<rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
							<xmp:CreatorTool>Altova StyleVision Enterprise Edition 2013 rel. 2 sp2 (x64) (http://www.altova.com)</xmp:CreatorTool>
						</rdf:Description>
					</rdf:RDF>
				</x:xmpmeta>
			</fo:declarations>
			<fo:page-sequence force-page-count="no-force" master-reference="page-master-0" initial-page-number="auto" format="1">
				<fo:static-content flow-name="odd-page-footer-first">
					<fo:block-container height="1.20cm" overflow="hidden" display-align="after">
						<fo:block font-family="Arial">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table width="100%" table-layout="fixed" border-spacing="2pt">
								<fo:table-column column-width="90%"/>
								<fo:table-column column-width="10%"/>
								<xsl:variable name="altova:CurrContextGrid_1" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell font-size="10pt" padding="0" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left">
														<fo:inline font-family="Times New Roman" font-size="12pt" font-weight="bold">
															<xsl:text>1+098+02+07+1114</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell font-size="10pt" padding="0" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="right">
														<fo:page-number font-family="Times New Roman" font-size="12.5pt" font-weight="bold"/>
														<fo:inline font-family="Times New Roman" font-size="12.5pt" font-weight="bold">
															<xsl:text>/ </xsl:text>
														</fo:inline>
														<fo:page-number-citation ref-id="SV_RefID_PageTotal" font-family="Times New Roman" font-size="12.5pt" font-weight="bold"/>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="even-page-footer-first">
					<fo:block-container height="1.20cm" overflow="hidden" display-align="after">
						<fo:block font-family="Arial">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table width="100%" table-layout="fixed" border-spacing="2pt">
								<fo:table-column column-width="90%"/>
								<fo:table-column column-width="10%"/>
								<xsl:variable name="altova:CurrContextGrid_1" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell font-size="10pt" padding="0" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left">
														<fo:inline font-family="Times New Roman" font-size="12pt" font-weight="bold">
															<xsl:text>1+098+02+07+1114</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell font-size="10pt" padding="0" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="right">
														<fo:page-number font-family="Times New Roman" font-size="12.5pt" font-weight="bold"/>
														<fo:inline font-family="Times New Roman" font-size="12.5pt" font-weight="bold">
															<xsl:text>/ </xsl:text>
														</fo:inline>
														<fo:page-number-citation ref-id="SV_RefID_PageTotal" font-family="Times New Roman" font-size="12.5pt" font-weight="bold"/>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="odd-page-footer">
					<fo:block-container height="1.20cm" overflow="hidden" display-align="after">
						<fo:block font-family="Arial">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table width="100%" table-layout="fixed" border-spacing="2pt">
								<fo:table-column column-width="90%"/>
								<fo:table-column column-width="10%"/>
								<xsl:variable name="altova:CurrContextGrid_2" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell font-size="10pt" padding="0" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left"/>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell font-size="10pt" padding="0" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="right">
														<fo:page-number font-family="Times New Roman" font-size="12.5pt" font-weight="bold"/>
														<fo:inline font-family="Times New Roman" font-size="12.5pt" font-weight="bold">
															<xsl:text>/ </xsl:text>
														</fo:inline>
														<fo:page-number-citation ref-id="SV_RefID_PageTotal" font-family="Times New Roman" font-size="12.5pt" font-weight="bold"/>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="even-page-footer">
					<fo:block-container height="1.20cm" overflow="hidden" display-align="after">
						<fo:block font-family="Arial">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table width="100%" table-layout="fixed" border-spacing="2pt">
								<fo:table-column column-width="90%"/>
								<fo:table-column column-width="10%"/>
								<xsl:variable name="altova:CurrContextGrid_2" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell font-size="10pt" padding="0" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left"/>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell font-size="10pt" padding="0" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="right">
														<fo:page-number font-family="Times New Roman" font-size="12.5pt" font-weight="bold"/>
														<fo:inline font-family="Times New Roman" font-size="12.5pt" font-weight="bold">
															<xsl:text>/ </xsl:text>
														</fo:inline>
														<fo:page-number-citation ref-id="SV_RefID_PageTotal" font-family="Times New Roman" font-size="12.5pt" font-weight="bold"/>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:flow flow-name="xsl-region-body">
					<fo:block font-family="Arial" line-height="1.4">
						<xsl:for-each select="$XML">
							<xsl:for-each select="agreement">
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table margin-top="-1.2cm" table-layout="fixed" width="100%" border-spacing="0">
									<fo:table-column column-width="50%"/>
									<fo:table-column column-width="50%"/>
									<xsl:variable name="altova:CurrContextGrid_3" select="."/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:external-graphic text-align="right" display-align="after" content-height="0.57in" scaling="non-uniform">
																<xsl:attribute name="src">
																	<xsl:text>url(</xsl:text>
																	<xsl:call-template name="altova:double-backslash">
																		<xsl:with-param name="text">
																			<xsl:value-of select="string(&apos;pdf_logo.jpg&apos;)"/>
																		</xsl:with-param>
																		<xsl:with-param name="text-length">
																			<xsl:value-of select="string-length(string(&apos;pdf_logo.jpg&apos;))"/>
																		</xsl:with-param>
																	</xsl:call-template>
																	<xsl:text>)</xsl:text>
																</xsl:attribute>
															</fo:external-graphic>
															<fo:inline>
																<xsl:text>&#x200B;</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="right">
															<fo:inline>
																<xsl:text>ÄÃ­slo poistnej zmluvy </xsl:text>
															</fo:inline>
															<xsl:for-each select="$XML">
																<xsl:for-each select="agreement">
																	<xsl:for-each select="variableSymbol">
																		<xsl:variable name="value-of-template_4">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_4),'&#x200B;')">
																				<fo:block font-family="Times New Roman" font-size="12.5pt" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_4"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline font-family="Times New Roman" font-size="12.5pt" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_4"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table table-layout="fixed" width="100%" border-spacing="0">
									<fo:table-column column-width="15%"/>
									<fo:table-column column-width="70%"/>
									<fo:table-column column-width="15%"/>
									<xsl:variable name="altova:CurrContextGrid_5" select="."/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="center">
															<fo:inline font-family="Arial" font-size="16pt" font-weight="bold" text-align="center">
																<xsl:text>POISTNÃ ZMLUVA</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell border-bottom="0.01in solid black" border-left="0.01in solid black" border-top="0.01in solid black" padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell border-bottom="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="center">
															<fo:inline font-size="14pt" font-weight="bold">
																<xsl:text>IndividuÃ¡lne komplexnÃ© cestovnÃ© poistenie </xsl:text>
															</fo:inline>
															<fo:block/>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell border-bottom="0.01in solid black" border-right="0.01in solid black" border-top="0.01in solid black" padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.15in" font-weight="normal" text-align="left" margin-right="100% - 100%" margin="0pt">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table table-layout="fixed" width="100%" border-spacing="0">
										<fo:table-column column-width="15%"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<xsl:variable name="altova:CurrContextGrid_6" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell padding="0" display-align="before">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>PoisÅ¥ovateÄ¾:</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell line-height="0.15in" padding="0" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="justify">
																<fo:inline>
																	<xsl:text>Union poisÅ¥ovÅa, a. s., BajkalskÃ¡ 29/A, 813 60 Bratislava, SlovenskÃ¡ republika, IÄO: 31322051, DIÄ:2020800353, zapÃ­sanÃ¡ v Obchodnom registri OkresnÃ©ho sÃºdu Bratislava I, odd. Sa, vl. Ä. 383/B, ÃºÄet Ä.: 6600547090/1111, IBAN SK59 1111 0000 0066 0054 7090, BIC UNCRSKBX vedenÃ½ v UniCredit Bank Czech Republic and Slovakia, a.s., poboÄka zahraniÄnej banky</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-weight="bold">
																	<xsl:text>kontaktnÃ© Ãºdaje</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:text>internetovÃ¡ strÃ¡nka: www.union.sk, telefÃ³n: 0850 111 211, e-mail: union@union.sk</xsl:text>
																</fo:inline>
																<fo:block/>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.15in" line-height="1.2" margin="0" padding="0" margin-right="0 + 100% - 100%" space-before="0" space-after="0">
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline font-weight="bold">
										<xsl:text>PoistnÃ­k</xsl:text>
									</fo:inline>
									<fo:inline>
										<xsl:text> (osoba, ktorÃ¡ podpisuje poistnÃº zmluvu a platÃ­ poistnÃ©)</xsl:text>
									</fo:inline>
									<fo:block/>
									<xsl:for-each select="insurer">
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
											<fo:table-column column-width="18%"/>
											<fo:table-column column-width="22%"/>
											<fo:table-column column-width="14%"/>
											<fo:table-column column-width="15%"/>
											<fo:table-column column-width="31%"/>
											<xsl:variable name="altova:CurrContextGrid_7" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Meno a priezvisko / NÃ¡zov</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Adresa trvalÃ©ho bydliska/ Adresa sÃ­dla</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>DÃ¡tum narodenia/IÄO</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>TelefÃ³nne ÄÃ­slo</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>E-mailovÃ¡ adresa</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:choose>
																		<xsl:when test="typ=&apos;FO&apos;">
																			<xsl:for-each select="title">
																				<xsl:variable name="value-of-template_8">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_8),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_8"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_8"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																			<fo:inline>
																				<xsl:text>&#160; </xsl:text>
																			</fo:inline>
																			<xsl:for-each select="name">
																				<xsl:variable name="value-of-template_9">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_9),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_9"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_9"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																			</xsl:for-each>
																			<fo:inline>
																				<xsl:text>&#160; </xsl:text>
																			</fo:inline>
																			<xsl:for-each select="surname">
																				<xsl:variable name="value-of-template_10">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_10),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_10"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_10"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:for-each select="companyName">
																				<xsl:variable name="value-of-template_11">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_11),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_11"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_11"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="address">
																		<xsl:for-each select="street">
																			<xsl:variable name="value-of-template_12">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_12),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_12"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_12"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:inline>
																			<xsl:text>&#160; </xsl:text>
																		</fo:inline>
																		<xsl:for-each select="number">
																			<xsl:variable name="value-of-template_13">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_13),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_13"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_13"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:inline>
																			<xsl:text>, </xsl:text>
																		</fo:inline>
																		<xsl:for-each select="psc">
																			<xsl:variable name="value-of-template_14">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_14),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_14"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_14"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																		<xsl:for-each select="city">
																			<xsl:variable name="value-of-template_15">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_15),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_15"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_15"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:choose>
																		<xsl:when test="typ=&apos;FO&apos;">
																			<xsl:for-each select="birthDate">
																				<xsl:for-each select="@sk">
																					<fo:inline>
																						<xsl:value-of select="string(.)"/>
																					</fo:inline>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:for-each select="ico">
																				<xsl:variable name="value-of-template_17">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_17),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_17"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_17"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="phone">
																		<xsl:variable name="value-of-template_18">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_18),'&#x200B;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template_18"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template_18"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="email">
																		<xsl:variable name="value-of-template_19">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_19),'&#x200B;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template_19"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template_19"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
									</xsl:for-each>
									<xsl:for-each select="insurer">
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline font-size="0.15in" font-weight="bold">
											<xsl:text>KoreÅ¡pondenÄnÃ¡ adresa</xsl:text>
										</fo:inline>
										<fo:inline font-size="0.15in">
											<xsl:text> (adresa, na ktorÃº sa doruÄujÃº pÃ­somnosti)</xsl:text>
										</fo:inline>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
											<fo:table-column column-width="25%"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<xsl:variable name="altova:CurrContextGrid_20" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-size="0.15in" font-weight="bold">
																		<xsl:text>Meno a priezvisko / NÃ¡zov</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-size="0.15in" font-weight="bold">
																		<xsl:text>KoreÅ¡pondenÄnÃ¡ adresa</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:choose>
																		<xsl:when test="typ=&apos;FO&apos;">
																			<xsl:for-each select="title">
																				<xsl:variable name="value-of-template_21">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_21),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_21"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_21"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																			<fo:inline>
																				<xsl:text>&#160; </xsl:text>
																			</fo:inline>
																			<xsl:for-each select="name">
																				<xsl:variable name="value-of-template_22">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_22),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_22"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_22"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																			</xsl:for-each>
																			<fo:inline>
																				<xsl:text>&#160; </xsl:text>
																			</fo:inline>
																			<xsl:for-each select="surname">
																				<xsl:variable name="value-of-template_23">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_23),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_23"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_23"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:for-each select="companyName">
																				<xsl:variable name="value-of-template_24">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_24),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_24"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_24"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:choose>
																		<xsl:when test="same=&apos;true&apos;">
																			<xsl:for-each select="address">
																				<xsl:for-each select="street">
																					<xsl:variable name="value-of-template_25">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_25),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_25"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_25"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160; </xsl:text>
																				</fo:inline>
																				<xsl:for-each select="number">
																					<xsl:variable name="value-of-template_26">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_26),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_26"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_26"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>, </xsl:text>
																				</fo:inline>
																				<xsl:for-each select="psc">
																					<xsl:variable name="value-of-template_27">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_27),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_27"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_27"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="city">
																					<xsl:variable name="value-of-template_28">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_28),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_28"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_28"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:for-each select="postalAddress">
																				<xsl:for-each select="street">
																					<xsl:variable name="value-of-template_29">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_29),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_29"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_29"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:for-each>
																			<fo:inline>
																				<xsl:text>&#160; </xsl:text>
																			</fo:inline>
																			<xsl:for-each select="postalAddress">
																				<xsl:for-each select="number">
																					<xsl:variable name="value-of-template_30">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_30),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_30"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_30"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:for-each>
																			<fo:inline>
																				<xsl:text>&#160; </xsl:text>
																			</fo:inline>
																			<xsl:for-each select="postalAddress">
																				<xsl:for-each select="psc">
																					<xsl:variable name="value-of-template_31">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_31),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_31"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_31"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:for-each>
																			<fo:inline>
																				<xsl:text>&#160; </xsl:text>
																			</fo:inline>
																			<xsl:for-each select="postalAddress">
																				<xsl:for-each select="city">
																					<xsl:variable name="value-of-template_32">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_32),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_32"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_32"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
									</xsl:for-each>
									<fo:block/>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.15in" line-height="1.2" margin="0" padding="0" margin-right="0 + 100% - 100%" space-before="0" space-after="0">
									<fo:inline font-weight="bold">
										<xsl:text>PoistenÃ½/Ã­</xsl:text>
									</fo:inline>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<xsl:if test="insuredPersons">
										<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
											<fo:table-column column-width="25%"/>
											<fo:table-column column-width="15%"/>
											<fo:table-column column-width="20%"/>
											<fo:table-column column-width="20%"/>
											<fo:table-column column-width="20%"/>
											<xsl:variable name="altova:CurrContextGrid_33" select="."/>
											<fo:table-header start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" font-weight="bold" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Meno a priezvisko</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" font-weight="bold" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>DÃ¡tum narodenia</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" font-weight="bold" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Preukaz Ä.*</xsl:text>
																	</fo:inline>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" font-weight="bold" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>RizikovÃ¡ skupina</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Typ zÄ¾avy (na osobu)</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-header>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<xsl:for-each select="insuredPersons">
														<xsl:for-each select="person">
															<fo:table-row>
																<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:for-each select="name">
																				<xsl:variable name="value-of-template_34">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_34),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_34"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_34"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																			<fo:inline>
																				<xsl:text>&#160; </xsl:text>
																			</fo:inline>
																			<xsl:for-each select="surname">
																				<xsl:variable name="value-of-template_35">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_35),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_35"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_35"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
																<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:for-each select="birthDate">
																				<xsl:for-each select="@sk">
																					<fo:inline>
																						<xsl:value-of select="string(.)"/>
																					</fo:inline>
																				</xsl:for-each>
																			</xsl:for-each>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
																<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="discountCard">
																					<xsl:for-each select="discountCardCode">
																						<xsl:variable name="value-of-template_37">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_37),'&#x200B;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template_37"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template_37"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="discountCardType">
																						<xsl:variable name="value-of-template_38">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_38),'&#x200B;')">
																								<fo:block>
																									<xsl:copy-of select="$value-of-template_38"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:copy-of select="$value-of-template_38"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-weight="bold">
																						<xsl:text>---</xsl:text>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																			<fo:block/>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
																<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:if test="riskGroup=&apos;T&apos;">
																				<fo:inline>
																					<xsl:text>turista</xsl:text>
																				</fo:inline>
																			</xsl:if>
																			<xsl:if test="riskGroup=&apos;H&apos;">
																				<fo:inline>
																					<xsl:text>Å¡port</xsl:text>
																				</fo:inline>
																			</xsl:if>
																			<xsl:if test="riskGroup=&apos;HD&apos;">
																				<fo:inline>
																					<xsl:text>osoba nad 70 rokov - Å¡port </xsl:text>
																				</fo:inline>
																			</xsl:if>
																			<xsl:if test="riskGroup=&apos;PM&apos;">
																				<fo:inline>
																					<xsl:text>manuÃ¡lna prÃ¡ca</xsl:text>
																				</fo:inline>
																			</xsl:if>
																			<xsl:if test="riskGroup=&apos;PN&apos;">
																				<fo:inline>
																					<xsl:text>nemanuÃ¡lna prÃ¡ca</xsl:text>
																				</fo:inline>
																			</xsl:if>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
																<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:choose>
																				<xsl:when test="discountCard">
																					<xsl:if test="discountCardType=&apos;unionzp&apos;">
																						<fo:inline>
																							<xsl:text>poistenec Union zdravotnej poisÅ¥ovne</xsl:text>
																						</fo:inline>
																					</xsl:if>
																					<xsl:if test="discountCardType=&apos;unionzp&apos; and discountCardType=&apos;&apos;">
																						<fo:inline>
																							<xsl:text>drÅ¾iteÄ¾ karty </xsl:text>
																						</fo:inline>
																						<xsl:if test="discountCardType=&apos;ISIC&apos;">
																							<fo:inline>
																								<xsl:text>ISIC</xsl:text>
																							</fo:inline>
																						</xsl:if>
																						<xsl:if test="discountCardType=&apos;euro26&apos;">
																							<fo:inline>
																								<xsl:text>EURO&lt;26</xsl:text>
																							</fo:inline>
																						</xsl:if>
																						<xsl:if test="discountCardType=&apos;go26&apos;">
																							<fo:inline>
																								<xsl:text>GO&lt;26</xsl:text>
																							</fo:inline>
																						</xsl:if>
																						<xsl:if test="discountCardType=&apos;itic&apos;">
																							<fo:inline>
																								<xsl:text>ITIC</xsl:text>
																							</fo:inline>
																						</xsl:if>
																					</xsl:if>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-weight="bold">
																						<xsl:text>---</xsl:text>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</fo:table-row>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
									</xsl:if>
									<fo:inline>
										<xsl:text>* preukaz poistenca zdravotnej poisÅ¥ovne / EURO&lt;26, GO&lt;26, ISIC, ITIC, EYCA / Älen OZPPaP</xsl:text>
									</fo:inline>
									<fo:block/>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.15in" line-height="1.2" margin="0" padding="0" margin-right="0 + 100% - 100%" space-before="0" space-after="0">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
										<fo:table-column column-width="25%"/>
										<fo:table-column column-width="35%"/>
										<fo:table-column column-width="20%"/>
										<fo:table-column column-width="20%"/>
										<xsl:variable name="altova:CurrContextGrid_39" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell border-bottom="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>DÃ¡tum a Äas uzavretia </xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-bottom="0.01in solid black" border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<xsl:for-each select="signingDate">
																	<fo:inline>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	</fo:inline>
																</xsl:for-each>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid black" border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<xsl:for-each select="signingDate">
																	<fo:inline>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																	</fo:inline>
																</xsl:for-each>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>PlatnosÅ¥ poistenia </xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>od </xsl:text>
																</fo:inline>
																<xsl:for-each select="insuredFrom">
																	<fo:inline>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	</fo:inline>
																</xsl:for-each>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>do </xsl:text>
																</fo:inline>
																<xsl:for-each select="insuredTo">
																	<fo:inline>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	</fo:inline>
																</xsl:for-each>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>na </xsl:text>
																</fo:inline>
																<xsl:for-each select="insuredDays">
																	<xsl:variable name="value-of-template_44">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_44),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_44"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_44"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell border-bottom="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>ÃzemnÃ¡ platnosÅ¥ poistenia</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-bottom="0.01in solid black" border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<xsl:if test="country=&apos;E&apos;">
																	<fo:inline>
																		<xsl:text>EurÃ³pa</xsl:text>
																	</fo:inline>
																</xsl:if>
																<xsl:if test="country=&apos;S&apos;">
																	<fo:inline>
																		<xsl:text>Svet</xsl:text>
																	</fo:inline>
																</xsl:if>
																<xsl:if test="country=&apos;SR&apos;">
																	<fo:inline>
																		<xsl:text>Slovensko</xsl:text>
																	</fo:inline>
																</xsl:if>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-bottom="0.01in solid black" border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>Krajina pobytu</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-bottom="0.01in solid black" border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left"/>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.15in" line-height="1.2" margin="0" padding="0" margin-right="0 + 100% - 100%" space-before="0" space-after="0">
									<fo:inline font-weight="bold">
										<xsl:text>POISTNÃ KRYTIE A POISTNÃ SUMA</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline font-weight="bold">
										<xsl:text>** prÃ­loha k poistnej zmluve typu 701/702 je uvedenÃ¡ na str. 1 broÅ¾Ãºry s nÃ¡zvom âIndividuÃ¡lne komplexnÃ© cestovnÃ© poistenieâ</xsl:text>
									</fo:inline>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.15in" line-height="1.2" margin="0" padding="0" margin-right="0 + 100% - 100%" space-before="0" space-after="0">
									<xsl:if test="hasAnyoneMedical=&apos;true&apos;">
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" keep-together.within-page="always" keep-together.within-column="always" table-layout="fixed" width="100%" border-spacing="0">
											<fo:table-column column-width="25%"/>
											<fo:table-column column-width="35%"/>
											<fo:table-column column-width="20%"/>
											<fo:table-column column-width="20%"/>
											<xsl:variable name="altova:CurrContextGrid_45" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell padding="0.05in" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Poistenie</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold" keep-together.within-page="always" keep-together.within-column="always">
																		<xsl:text>poistenie lieÄebnÃ½ch nÃ¡kladov v zahraniÄÃ­</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:inline>
																		<xsl:text>ÄasÅ¥ B VPPIKCP/0114</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:inline>
																		<xsl:text>a</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:inline font-weight="bold">
																		<xsl:text>asistenÄnÃ© sluÅ¾by v zahraniÄÃ­</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:inline>
																		<xsl:text>ÄasÅ¥ A, Äl. 13 VPPIKCP/0114</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>PoistnÃ¡ suma</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="right">
																	<fo:inline>
																		<xsl:text>je uvedenÃ¡ v prÃ­lohe k poistnej zmluve typu 701/702 **</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<xsl:if test="$XML">
											<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
												<fo:table-column column-width="80%"/>
												<fo:table-column column-width="20%"/>
												<xsl:variable name="altova:CurrContextGrid_46" select="."/>
												<fo:table-header start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<fo:table-row>
															<fo:table-cell padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Meno a priezvisko poistenÃ©ho</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>DÃ¡tum narodenia</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-header>
												<fo:table-body start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<xsl:for-each select="$XML">
															<xsl:for-each select="agreement">
																<xsl:for-each select="insuredPersons">
																	<xsl:for-each select="person">
																		<xsl:choose>
																			<xsl:when test="medical=&apos;true&apos;">
																				<fo:table-row>
																					<fo:table-cell border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="name">
																									<xsl:variable name="value-of-template_47">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_47),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_47"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_47"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																								<xsl:for-each select="surname">
																									<xsl:variable name="value-of-template_48">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_48),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_48"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_48"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																					<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="birthDate">
																									<xsl:for-each select="@sk">
																										<fo:inline>
																											<xsl:value-of select="string(.)"/>
																										</fo:inline>
																									</xsl:for-each>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																				</fo:table-row>
																			</xsl:when>
																			<xsl:otherwise/>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-body>
											</fo:table>
										</xsl:if>
									</xsl:if>
									<fo:block/>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<xsl:if test="hasAnyoneBaggage=&apos;true&apos;">
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" keep-together.within-page="always" keep-together.within-column="always" table-layout="fixed" width="100%" border-spacing="0">
											<fo:table-column column-width="25%"/>
											<fo:table-column column-width="35%"/>
											<fo:table-column column-width="20%"/>
											<fo:table-column column-width="20%"/>
											<xsl:variable name="altova:CurrContextGrid_50" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell padding="0.05in" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Poistenie</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>poistenie batoÅ¾iny</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:inline>
																		<xsl:text>ÄasÅ¥ C VPPIKCP/0114</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>PoistnÃ¡ suma</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="right">
																	<fo:block/>
																	<fo:inline>
																		<xsl:text>max. 350 EUR / 1 vec</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:inline>
																		<xsl:text>spoluÃºÄasÅ¥ 15 EUR</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:inline>
																		<xsl:text>sublimity uvedenÃ© v prÃ­lohe k poistnej zmluve typu 701/702 **</xsl:text>
																	</fo:inline>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<xsl:if test="$XML">
											<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
												<fo:table-column column-width="80%"/>
												<fo:table-column column-width="20%"/>
												<xsl:variable name="altova:CurrContextGrid_51" select="."/>
												<fo:table-header start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<fo:table-row>
															<fo:table-cell padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Meno a priezvisko poistenÃ©ho</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>DÃ¡tum narodenia</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-header>
												<fo:table-body start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<xsl:for-each select="$XML">
															<xsl:for-each select="agreement">
																<xsl:for-each select="insuredPersons">
																	<xsl:for-each select="person">
																		<xsl:choose>
																			<xsl:when test="baggage=&apos;true&apos;">
																				<fo:table-row>
																					<fo:table-cell border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="name">
																									<xsl:variable name="value-of-template_52">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_52),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_52"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_52"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																								<xsl:for-each select="surname">
																									<xsl:variable name="value-of-template_53">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_53),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_53"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_53"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																					<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="birthDate">
																									<xsl:for-each select="@sk">
																										<fo:inline>
																											<xsl:value-of select="string(.)"/>
																										</fo:inline>
																									</xsl:for-each>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																				</fo:table-row>
																			</xsl:when>
																			<xsl:otherwise/>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-body>
											</fo:table>
										</xsl:if>
									</xsl:if>
									<fo:block/>
									<xsl:if test="hasAnyoneResponsibility=&apos;true&apos;">
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" keep-together.within-page="always" keep-together.within-column="always" table-layout="fixed" width="100%" border-spacing="0">
											<fo:table-column column-width="25%"/>
											<fo:table-column column-width="35%"/>
											<fo:table-column column-width="20%"/>
											<fo:table-column column-width="20%"/>
											<xsl:variable name="altova:CurrContextGrid_55" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell padding="0.05in" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Poistenie</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>poistenie vÅ¡eobecnej zodpovednosti za Å¡kodu</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:inline>
																		<xsl:text>ÄasÅ¥ D VPPIKCP/0114</xsl:text>
																	</fo:inline>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>PoistnÃ¡ suma</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="right">
																	<fo:inline>
																		<xsl:text>je uvedenÃ¡ v prÃ­lohe k poistnej zmluve typu 701/702 **</xsl:text>
																	</fo:inline>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<xsl:if test="$XML">
											<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
												<fo:table-column column-width="80%"/>
												<fo:table-column column-width="20%"/>
												<xsl:variable name="altova:CurrContextGrid_56" select="."/>
												<fo:table-header start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<fo:table-row>
															<fo:table-cell padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Meno a priezvisko poistenÃ©ho</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>DÃ¡tum narodenia</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-header>
												<fo:table-body start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<xsl:for-each select="$XML">
															<xsl:for-each select="agreement">
																<xsl:for-each select="insuredPersons">
																	<xsl:for-each select="person">
																		<fo:table-row>
																			<fo:table-cell border-top="0.01in solid black" padding="0.05in" display-align="center">
																				<fo:block-container overflow="hidden">
																					<fo:block text-align="left">
																						<xsl:for-each select="name">
																							<xsl:variable name="value-of-template_57">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_57),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_57"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_57"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																						<xsl:for-each select="surname">
																							<xsl:variable name="value-of-template_58">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_58),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_58"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_58"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block-container>
																			</fo:table-cell>
																			<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																				<fo:block-container overflow="hidden">
																					<fo:block text-align="left">
																						<xsl:for-each select="birthDate">
																							<xsl:for-each select="@sk">
																								<fo:inline>
																									<xsl:value-of select="string(.)"/>
																								</fo:inline>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block-container>
																			</fo:table-cell>
																		</fo:table-row>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-body>
											</fo:table>
										</xsl:if>
									</xsl:if>
									<xsl:if test="hasAnyoneAccident=&apos;true&apos;">
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" keep-together.within-page="always" keep-together.within-column="always" table-layout="fixed" width="100%" border-spacing="0">
											<fo:table-column column-width="25%"/>
											<fo:table-column column-width="35%"/>
											<fo:table-column column-width="20%"/>
											<fo:table-column column-width="20%"/>
											<xsl:variable name="altova:CurrContextGrid_60" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell padding="0.05in" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Poistenie</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>ÃºrazovÃ© poistenie</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:inline>
																		<xsl:text>ÄasÅ¥ E VPPIKCP/0114</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:block>
																		<fo:leader leader-pattern="space"/>
																	</fo:block>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>PoistnÃ¡ suma</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="right">
																	<fo:inline>
																		<xsl:text>je uvedenÃ¡ v prÃ­lohe k poistnej zmluve typu 701/702 **</xsl:text>
																	</fo:inline>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<xsl:if test="$XML">
											<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
												<fo:table-column column-width="80%"/>
												<fo:table-column column-width="20%"/>
												<xsl:variable name="altova:CurrContextGrid_61" select="."/>
												<fo:table-header start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<fo:table-row>
															<fo:table-cell padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Meno a priezvisko poistenÃ©ho</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>DÃ¡tum narodenia</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-header>
												<fo:table-body start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<xsl:for-each select="$XML">
															<xsl:for-each select="agreement">
																<xsl:for-each select="insuredPersons">
																	<xsl:for-each select="person">
																		<fo:table-row>
																			<fo:table-cell border-top="0.01in solid black" padding="0.05in" display-align="center">
																				<fo:block-container overflow="hidden">
																					<fo:block text-align="left">
																						<xsl:for-each select="name">
																							<xsl:variable name="value-of-template_62">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_62),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_62"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_62"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																						<xsl:for-each select="surname">
																							<xsl:variable name="value-of-template_63">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_63),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_63"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_63"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block-container>
																			</fo:table-cell>
																			<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																				<fo:block-container overflow="hidden">
																					<fo:block text-align="left">
																						<xsl:for-each select="birthDate">
																							<xsl:for-each select="@sk">
																								<fo:inline>
																									<xsl:value-of select="string(.)"/>
																								</fo:inline>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block-container>
																			</fo:table-cell>
																		</fo:table-row>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-body>
											</fo:table>
										</xsl:if>
									</xsl:if>
									<xsl:if test="hasAnyoneTechnicalHelp">
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" keep-together.within-page="always" keep-together.within-column="always" table-layout="fixed" width="100%" border-spacing="0">
											<fo:table-column column-width="25%"/>
											<fo:table-column column-width="35%"/>
											<fo:table-column column-width="20%"/>
											<fo:table-column column-width="20%"/>
											<xsl:variable name="altova:CurrContextGrid_65" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell padding="0.05in" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Poistenie</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>poistenie nÃ¡kladov na technickÃº pomoc v prÃ­pade zÃ¡chrannej akcie v horÃ¡ch v zahraniÄÃ­</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:inline>
																		<xsl:text>ÄasÅ¥ G VPPIKCP/0114</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:block>
																		<fo:leader leader-pattern="space"/>
																	</fo:block>
																	<fo:block>
																		<fo:leader leader-pattern="space"/>
																	</fo:block>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>PoistnÃ¡ suma</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="right">
																	<fo:inline>
																		<xsl:text>je uvedenÃ¡ v prÃ­lohe k poistnej zmluve typu 701/702 **</xsl:text>
																	</fo:inline>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<xsl:if test="$XML">
											<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
												<fo:table-column column-width="80%"/>
												<fo:table-column column-width="20%"/>
												<xsl:variable name="altova:CurrContextGrid_66" select="."/>
												<fo:table-header start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<fo:table-row>
															<fo:table-cell padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Meno a priezvisko poistenÃ©ho</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>DÃ¡tum narodenia</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-header>
												<fo:table-body start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<xsl:for-each select="$XML">
															<xsl:for-each select="agreement">
																<xsl:for-each select="insuredPersons">
																	<xsl:for-each select="person">
																		<fo:table-row>
																			<fo:table-cell border-top="0.01in solid black" padding="0.05in" display-align="center">
																				<fo:block-container overflow="hidden">
																					<fo:block text-align="left">
																						<xsl:for-each select="name">
																							<xsl:variable name="value-of-template_67">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_67),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_67"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_67"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																						<xsl:for-each select="surname">
																							<xsl:variable name="value-of-template_68">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_68),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_68"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_68"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block-container>
																			</fo:table-cell>
																			<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																				<fo:block-container overflow="hidden">
																					<fo:block text-align="left">
																						<xsl:for-each select="birthDate">
																							<xsl:for-each select="@sk">
																								<fo:inline>
																									<xsl:value-of select="string(.)"/>
																								</fo:inline>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block-container>
																			</fo:table-cell>
																		</fo:table-row>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-body>
											</fo:table>
										</xsl:if>
									</xsl:if>
									<xsl:if test="hasAnyoneRescueService=&apos;true&apos;">
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" keep-together.within-page="always" keep-together.within-column="always" table-layout="fixed" width="100%" border-spacing="0">
											<fo:table-column column-width="25%"/>
											<fo:table-column column-width="35%"/>
											<fo:table-column column-width="20%"/>
											<fo:table-column column-width="20%"/>
											<xsl:variable name="altova:CurrContextGrid_70" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell padding="0.05in" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Poistenie</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>poistenie nÃ¡kladov na zÃ¡sah Horskej zÃ¡chrannej sluÅ¾by </xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:inline>
																		<xsl:text>ÄasÅ¥ H VPPIKCP/0114</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:block>
																		<fo:leader leader-pattern="space"/>
																	</fo:block>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>PoistnÃ¡ suma</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="right">
																	<fo:inline>
																		<xsl:text>je uvedenÃ¡ v prÃ­lohe k poistnej zmluve typu 701/702 **</xsl:text>
																	</fo:inline>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<xsl:if test="$XML">
											<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
												<fo:table-column column-width="80%"/>
												<fo:table-column column-width="20%"/>
												<xsl:variable name="altova:CurrContextGrid_71" select="."/>
												<fo:table-header start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<fo:table-row>
															<fo:table-cell padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Meno a priezvisko poistenÃ©ho</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>DÃ¡tum narodenia</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-header>
												<fo:table-body start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<xsl:for-each select="$XML">
															<xsl:for-each select="agreement">
																<xsl:for-each select="insuredPersons">
																	<xsl:for-each select="person">
																		<fo:table-row>
																			<fo:table-cell border-top="0.01in solid black" padding="0.05in" display-align="center">
																				<fo:block-container overflow="hidden">
																					<fo:block text-align="left">
																						<xsl:for-each select="name">
																							<xsl:variable name="value-of-template_72">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_72),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_72"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_72"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																						<xsl:for-each select="surname">
																							<xsl:variable name="value-of-template_73">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_73),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_73"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_73"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block-container>
																			</fo:table-cell>
																			<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																				<fo:block-container overflow="hidden">
																					<fo:block text-align="left">
																						<xsl:for-each select="birthDate">
																							<xsl:for-each select="@sk">
																								<fo:inline>
																									<xsl:value-of select="string(.)"/>
																								</fo:inline>
																							</xsl:for-each>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block-container>
																			</fo:table-cell>
																		</fo:table-row>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-body>
											</fo:table>
										</xsl:if>
									</xsl:if>
									<xsl:if test="hasAnyoneStrono=&apos;true&apos;">
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<xsl:if test="$XML">
											<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
												<fo:table-column column-width="25%"/>
												<fo:table-column column-width="15%"/>
												<fo:table-column column-width="20%"/>
												<fo:table-column column-width="15%"/>
												<fo:table-column column-width="25%"/>
												<xsl:variable name="altova:CurrContextGrid_75" select="."/>
												<fo:table-header start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="5" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Poistenie storna objednanej sluÅ¾by (ÄasÅ¥ F VPPIKCP/0114)</xsl:text>
																		</fo:inline>
																		<fo:inline>
																			<xsl:text>, poistnÃ¡ suma je uvedenÃ¡ v prÃ­lohe k poistnej zmluve typu 701/702 **</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell border-top="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Meno a priezvisko poistenÃ©ho</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>DÃ¡tum narodenia</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Typ objednanej sluÅ¾by</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>DÃ¡tum zakÃºpenia objednanej sluÅ¾by</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="right">
																		<fo:inline font-weight="bold">
																			<xsl:text>Cena objednanej sluÅ¾by</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-header>
												<fo:table-body start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<xsl:for-each select="$XML">
															<xsl:for-each select="agreement">
																<xsl:for-each select="insuredPersons">
																	<xsl:for-each select="person">
																		<xsl:choose>
																			<xsl:when test="personData/stornoData">
																				<fo:table-row>
																					<fo:table-cell border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="name">
																									<xsl:variable name="value-of-template_76">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_76),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_76"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_76"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																								<xsl:for-each select="surname">
																									<xsl:variable name="value-of-template_77">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_77),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_77"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_77"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																					<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="birthDate">
																									<xsl:for-each select="@sk">
																										<fo:inline>
																											<xsl:value-of select="string(.)"/>
																										</fo:inline>
																									</xsl:for-each>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																					<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="stornoObj">
																									<xsl:for-each select="type">
																										<xsl:variable name="value-of-template_79">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_79),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_79"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_79"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																					<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="stornoObj">
																									<xsl:for-each select="date">
																										<xsl:for-each select="@sk">
																											<fo:inline>
																												<xsl:value-of select="string(.)"/>
																											</fo:inline>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																					<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="right">
																								<xsl:for-each select="storno">
																									<fo:inline>
																										<xsl:value-of select="format-number(number(string(.)), '##0,00', 'format1')"/>
																									</fo:inline>
																								</xsl:for-each>
																								<fo:inline>
																									<xsl:text> EUR</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																				</fo:table-row>
																			</xsl:when>
																			<xsl:otherwise/>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-body>
											</fo:table>
										</xsl:if>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
											<fo:table-column column-width="proportional-column-width(1)"/>
											<xsl:variable name="altova:CurrContextGrid_82" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell padding="0.05in" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Poistenia storna objednanej sluÅ¾by zaÄÃ­na nasledujÃºcim dÅom po uhradenÃ­ poistnÃ©ho a konÄÃ­ dÅom nÃ¡stupu na cestu smerujÃºcu k vyuÅ¾itiu objednanej sluÅ¾by.</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
									</xsl:if>
									<xsl:if test="../pet=&apos;true&apos;">
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<xsl:if test="$XML">
											<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
												<fo:table-column column-width="25%"/>
												<fo:table-column column-width="15%"/>
												<fo:table-column column-width="20%"/>
												<fo:table-column column-width="40%"/>
												<xsl:variable name="altova:CurrContextGrid_83" select="."/>
												<fo:table-header start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="4" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Poistenie domÃ¡ceho milÃ¡Äika (ÄasÅ¥ I VPPIKCP/0114)</xsl:text>
																		</fo:inline>
																		<fo:inline>
																			<xsl:text>, poistnÃ¡ suma je uvedenÃ¡ v prÃ­lohe k poistnej zmluve typu 701/702 **</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell border-top="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Meno a priezvisko poistenÃ©ho</xsl:text>
																		</fo:inline>
																		<fo:block/>
																		<fo:inline>
																			<xsl:text>(majiteÄ¾a domÃ¡ceho milÃ¡Äika)</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>DÃ¡tum narodenia</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Druh</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>MedzinÃ¡rodnÃ½ oÄkovacÃ­ preukaz Ä.</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-header>
												<fo:table-body start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<xsl:for-each select="$XML">
															<xsl:for-each select="agreement">
																<xsl:for-each select="insuredPersons">
																	<xsl:for-each select="person">
																		<xsl:choose>
																			<xsl:when test="personData/pet">
																				<fo:table-row>
																					<fo:table-cell border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="name">
																									<xsl:variable name="value-of-template_84">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_84),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_84"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_84"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																								<xsl:for-each select="surname">
																									<xsl:variable name="value-of-template_85">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_85),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_85"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_85"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																					<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="birthDate">
																									<xsl:for-each select="@sk">
																										<fo:inline>
																											<xsl:value-of select="string(.)"/>
																										</fo:inline>
																									</xsl:for-each>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																					<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="petType">
																									<xsl:variable name="value-of-template_87">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_87),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_87"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_87"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																					<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="petLicence">
																									<xsl:variable name="value-of-template_88">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_88),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_88"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_88"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																				</fo:table-row>
																			</xsl:when>
																			<xsl:otherwise/>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-body>
											</fo:table>
										</xsl:if>
									</xsl:if>
									<xsl:if test="../vacation=&apos;true&apos;">
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<xsl:if test="$XML">
											<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
												<fo:table-column column-width="25%"/>
												<fo:table-column column-width="15%"/>
												<fo:table-column column-width="40%"/>
												<fo:table-column column-width="20%"/>
												<xsl:variable name="altova:CurrContextGrid_89" select="."/>
												<fo:table-header start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<fo:table-row>
															<fo:table-cell number-columns-spanned="4" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Poistenie dovolenkovej domÃ¡cnosti (ÄasÅ¥ J VPPIKCP/0114)</xsl:text>
																		</fo:inline>
																		<fo:inline>
																			<xsl:text>, poistnÃ¡ suma je uvedenÃ¡ v prÃ­lohe k poistnej zmluve typu 701/702 **</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell border-top="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Meno a priezvisko poistenÃ©ho</xsl:text>
																		</fo:inline>
																		<fo:block/>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>DÃ¡tum narodenia</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Miesto poistenia - adresa</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline font-weight="bold">
																			<xsl:text>Ä. bytu / podlaÅ¾ie/ Ä. domu</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-header>
												<fo:table-body start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<xsl:for-each select="$XML">
															<xsl:for-each select="agreement">
																<xsl:for-each select="insuredPersons">
																	<xsl:for-each select="person">
																		<xsl:choose>
																			<xsl:when test="personData/vacation">
																				<fo:table-row>
																					<fo:table-cell border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="name">
																									<xsl:variable name="value-of-template_90">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_90),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_90"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_90"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																								<xsl:for-each select="surname">
																									<xsl:variable name="value-of-template_91">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_91),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_91"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_91"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																					<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="birthDate">
																									<xsl:for-each select="@sk">
																										<fo:inline>
																											<xsl:value-of select="string(.)"/>
																										</fo:inline>
																									</xsl:for-each>
																								</xsl:for-each>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																					<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="vacationObj">
																									<xsl:for-each select="street">
																										<xsl:variable name="value-of-template_93">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_93),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_93"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_93"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																								<fo:inline>
																									<xsl:text>&#160; </xsl:text>
																								</fo:inline>
																								<xsl:for-each select="vacationObj">
																									<xsl:for-each select="streetNumber">
																										<xsl:variable name="value-of-template_94">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_94),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_94"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_94"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																								<fo:inline>
																									<xsl:text>&#160; </xsl:text>
																								</fo:inline>
																								<xsl:for-each select="vacationObj">
																									<xsl:for-each select="postalCode">
																										<xsl:variable name="value-of-template_95">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_95),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_95"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_95"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																								<fo:inline>
																									<xsl:text>&#160; </xsl:text>
																								</fo:inline>
																								<xsl:for-each select="vacationObj">
																									<xsl:for-each select="city">
																										<xsl:variable name="value-of-template_96">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_96),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_96"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_96"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																								<fo:block/>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																					<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
																						<fo:block-container overflow="hidden">
																							<fo:block text-align="left">
																								<xsl:for-each select="vacationObj">
																									<xsl:for-each select="buildingNr">
																										<xsl:variable name="value-of-template_97">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_97),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_97"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_97"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																								<xsl:for-each select="vacationObj">
																									<xsl:for-each select="floorNr">
																										<xsl:variable name="value-of-template_98">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_98),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_98"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_98"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:for-each>
																								<fo:block/>
																							</fo:block>
																						</fo:block-container>
																					</fo:table-cell>
																				</fo:table-row>
																			</xsl:when>
																			<xsl:otherwise/>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-body>
											</fo:table>
										</xsl:if>
									</xsl:if>
									<xsl:if test="../hasAgreementDiscount=&apos;true&apos;">
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<xsl:if test="$XML">
											<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
												<fo:table-column column-width="40%"/>
												<fo:table-column column-width="60%"/>
												<xsl:variable name="altova:CurrContextGrid_99" select="."/>
												<fo:table-header start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<fo:table-row>
															<fo:table-cell border-top="0.01in solid black" padding="5" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Typ zÄ¾avy</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="5" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>VÃ½Å¡ka zÄ¾avy</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-header>
												<fo:table-body start-indent="0pt">
													<xsl:variable name="altova:tablerows">
														<xsl:for-each select="$XML">
															<xsl:for-each select="agreement">
																<xsl:for-each select="discounts">
																	<xsl:for-each select="discount">
																		<fo:table-row>
																			<fo:table-cell border-top="0.01in solid black" padding="5" display-align="center">
																				<fo:block-container overflow="hidden">
																					<fo:block text-align="left">
																						<xsl:for-each select="type">
																							<xsl:variable name="value-of-template_100">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_100),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_100"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_100"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block-container>
																			</fo:table-cell>
																			<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="5" display-align="center">
																				<fo:block-container overflow="hidden">
																					<fo:block text-align="left">
																						<xsl:for-each select="priceText">
																							<xsl:variable name="value-of-template_101">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_101),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_101"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_101"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</fo:block>
																				</fo:block-container>
																			</fo:table-cell>
																		</fo:table-row>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:variable>
													<xsl:choose>
														<xsl:when test="string($altova:tablerows)">
															<xsl:copy-of select="$altova:tablerows"/>
														</xsl:when>
														<xsl:otherwise>
															<fo:table-row>
																<fo:table-cell>
																	<fo:block/>
																</fo:table-cell>
															</fo:table-row>
														</xsl:otherwise>
													</xsl:choose>
												</fo:table-body>
											</fo:table>
										</xsl:if>
									</xsl:if>
									<fo:block/>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
										<fo:table-column column-width="40%"/>
										<fo:table-column column-width="60%"/>
										<xsl:variable name="altova:CurrContextGrid_102" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell border-right-color="black" border-right-style="solid" border-right-width="thin" padding="5" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>POISTNÃ SPOLU</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell padding="5" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="right">
																<xsl:for-each select="totalPrice">
																	<fo:inline font-weight="bold">
																		<xsl:value-of select="format-number(number(string(.)), '##0,00', 'format1')"/>
																	</fo:inline>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:inline font-weight="bold">
																	<xsl:text>EUR</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.15in" line-height="1.2" margin="0" padding="0" margin-right="0 + 100% - 100%" space-before="0" space-after="0">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table table-layout="fixed" width="100%" border-spacing="0">
										<fo:table-column column-width="50%"/>
										<fo:table-column column-width="50%"/>
										<xsl:variable name="altova:CurrContextGrid_104" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell border="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>Druh poistnÃ©ho</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>jednorazovÃ©</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell border="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>SplatnosÅ¥ poistnÃ©ho</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>naraz</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell border="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>DÃ¡tum splatnosti</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<xsl:for-each select="insuredFrom">
																	<xsl:variable name="value-of-template_105">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_105),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_105"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_105"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell border="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>SpÃ´sob platby jednorazovÃ©ho poistnÃ©ho</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>prevodnÃ½m prÃ­kazom</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.15in" line-height="0.15in" text-align="justify" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
									<fo:inline font-size="0.15in" font-weight="bold">
										<xsl:text>ZvlÃ¡Å¡tne dojednania</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:list-block provisional-distance-between-starts="7mm" provisional-label-separation="2mm">
										<fo:list-item>
											<fo:list-item-label end-indent="label-end()" text-align="right">
												<fo:block>
													<xsl:number format="1" value="1"/>.</fo:block>
											</fo:list-item-label>
											<fo:list-item-body start-indent="body-start()">
												<fo:block>
													<fo:inline>
														<xsl:text>OdchÃ½lne od prÃ­lohy k poistnej zmluve typu 701/702 ** sa pre poistenie storna objednanej sluÅ¾by dojednÃ¡va</xsl:text>
													</fo:inline>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:table keep-together.within-page="always" keep-together.within-column="always" table-layout="fixed" width="100%" border-spacing="0">
														<fo:table-column column-width="20%"/>
														<fo:table-column column-width="60%"/>
														<fo:table-column column-width="20%"/>
														<xsl:variable name="altova:CurrContextGrid_106" select="."/>
														<fo:table-body start-indent="0pt">
															<xsl:variable name="altova:tablerows">
																<fo:table-row>
																	<fo:table-cell border-left="0.01in solid black" border-right="0.01in solid black" border-top="0.01in solid black" padding="0" display-align="center">
																		<fo:block-container overflow="hidden">
																			<fo:block text-align="left">
																				<fo:inline>
																					<xsl:text>poistenie storna objednanej sluÅ¾by</xsl:text>
																				</fo:inline>
																				<fo:block/>
																				<fo:block>
																					<fo:leader leader-pattern="space"/>
																				</fo:block>
																				<fo:block>
																					<fo:leader leader-pattern="space"/>
																				</fo:block>
																			</fo:block>
																		</fo:block-container>
																	</fo:table-cell>
																	<fo:table-cell border-right="0.01in solid black" border-top="0.01in solid black" padding="0" display-align="center">
																		<fo:block-container overflow="hidden">
																			<fo:block text-align="left">
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x200B;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:list-block provisional-distance-between-starts="7mm" provisional-label-separation="2mm">
																					<fo:list-item>
																						<fo:list-item-label end-indent="label-end()" text-align="right">
																							<fo:block font-family="ZapfDingbats" font-size="7pt">&#x25A0;</fo:block>
																						</fo:list-item-label>
																						<fo:list-item-body start-indent="body-start()">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>choroba, hospitalizÃ¡cia, Ãºraz, Å¾ivelnÃ¡ udalosÅ¥, trestnÃ½ Äin, nedobrovoÄ¾nÃ¡ strata zamestnania (podÄ¾a Äasti F, Äl. 2, bod 1, pÃ­sm. a) â g) a pÃ­sm. i) â n) VPPIKCP/0114)</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:list-item-body>
																					</fo:list-item>
																				</fo:list-block>
																			</fo:block>
																		</fo:block-container>
																	</fo:table-cell>
																	<fo:table-cell border-right="0.01in solid black" border-top="0.01in solid black" padding="0" display-align="center">
																		<fo:block-container overflow="hidden">
																			<fo:block text-align="left">
																				<fo:inline>
																					<xsl:text>100% stornopoplatku</xsl:text>
																				</fo:inline>
																				<fo:block/>
																				<fo:block>
																					<fo:leader leader-pattern="space"/>
																				</fo:block>
																				<fo:block>
																					<fo:leader leader-pattern="space"/>
																				</fo:block>
																				<fo:block>
																					<fo:leader leader-pattern="space"/>
																				</fo:block>
																			</fo:block>
																		</fo:block-container>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell border-left="0.01in solid black" border-right="0.01in solid black" padding="0" display-align="center">
																		<fo:block-container overflow="hidden">
																			<fo:block text-align="left">
																				<fo:inline>
																					<xsl:text>ÄasÅ¥ F VPPIKCP/0114</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block-container>
																	</fo:table-cell>
																	<fo:table-cell border-right="0.01in solid black" padding="0" display-align="center">
																		<fo:block-container overflow="hidden">
																			<fo:block text-align="left">
																				<fo:inline-container>
																					<fo:block>
																						<xsl:text>&#x200B;</xsl:text>
																					</fo:block>
																				</fo:inline-container>
																				<fo:list-block provisional-distance-between-starts="7mm" provisional-label-separation="2mm">
																					<fo:list-item>
																						<fo:list-item-label end-indent="label-end()" text-align="right">
																							<fo:block font-family="ZapfDingbats" font-size="7pt">&#x25A0;</fo:block>
																						</fo:list-item-label>
																						<fo:list-item-body start-indent="body-start()">
																							<fo:block>
																								<fo:inline>
																									<xsl:text>smrÅ¥ poistenÃ©ho, smrÅ¥ blÃ­zkej osoby (podÄ¾a Äasti F, Äl. 2, bod 1, pÃ­sm. h) VPPIKCP/0114)</xsl:text>
																								</fo:inline>
																							</fo:block>
																						</fo:list-item-body>
																					</fo:list-item>
																				</fo:list-block>
																			</fo:block>
																		</fo:block-container>
																	</fo:table-cell>
																	<fo:table-cell border-right="0.01in solid black" padding="0" display-align="center">
																		<fo:block-container overflow="hidden">
																			<fo:block text-align="left">
																				<fo:inline>
																					<xsl:text>100% stornopoplatku</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block-container>
																	</fo:table-cell>
																</fo:table-row>
																<fo:table-row>
																	<fo:table-cell border-bottom="0.01in solid black" border-left="0.01in solid black" border-right="0.01in solid black" padding="0" display-align="center">
																		<fo:block-container overflow="hidden">
																			<fo:block text-align="left"/>
																		</fo:block-container>
																	</fo:table-cell>
																	<fo:table-cell border-bottom="0.01in solid black" border-right="0.01in solid black" padding="0" display-align="center">
																		<fo:block-container overflow="hidden">
																			<fo:block text-align="left"/>
																		</fo:block-container>
																	</fo:table-cell>
																	<fo:table-cell border-bottom="0.01in solid black" border-right="0.01in solid black" padding="0" display-align="center">
																		<fo:block-container overflow="hidden">
																			<fo:block text-align="left">
																				<fo:inline>
																					<xsl:text>max. 9.000 EUR / 1 osoba</xsl:text>
																				</fo:inline>
																				<fo:block/>
																				<fo:inline>
																					<xsl:text>spolu najviac 27.000 EUR</xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block-container>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:variable>
															<xsl:choose>
																<xsl:when test="string($altova:tablerows)">
																	<xsl:copy-of select="$altova:tablerows"/>
																</xsl:when>
																<xsl:otherwise>
																	<fo:table-row>
																		<fo:table-cell>
																			<fo:block/>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:otherwise>
															</xsl:choose>
														</fo:table-body>
													</fo:table>
												</fo:block>
											</fo:list-item-body>
										</fo:list-item>
										<fo:list-item>
											<fo:list-item-label end-indent="label-end()" text-align="right">
												<fo:block>
													<xsl:number format="1" value="2"/>.</fo:block>
											</fo:list-item-label>
											<fo:list-item-body start-indent="body-start()">
												<fo:block>
													<fo:inline>
														<xsl:text>OdchÃ½lne od Äasti F, Äl. 4, bod 2 VPPIKCP/0114 sa dojednÃ¡va, Å¾e maximÃ¡lna vÃ½Å¡ka poistnÃ©ho plnenia poisÅ¥ovateÄ¾a je 100% stornopoplatku uplatnenÃ©ho poskytovateÄ¾om sluÅ¾by. PoisÅ¥ovateÄ¾ uhradÃ­ poistnÃ© plnenie podÄ¾a tohto bodu za 1 osobu maximÃ¡lne do vÃ½Å¡ky poistnej sumy uvedenej v bode 1 tÃ½chto zvlÃ¡Å¡tnych dojednanÃ­ a za vÅ¡etky osoby uvedenÃ© spolu v jednej poistnej zmluve a sÃºÄasne jednej zmluve o obstaranÃ­ zÃ¡jazdu maximÃ¡lne do vÃ½Å¡ky poistnej sumy uvedenej v bode 1 tÃ½chto zvlÃ¡Å¡tnych dojednanÃ­. V prÃ­pade poistnÃ©ho plnenia z jednej poistnej udalosti pre viacerÃ© poistenÃ© osoby sa poistnÃ© plnenie vyplÃ¡ca pomerne, v rovnakom pomere pre kaÅ¾dÃº poistenÃº osobu.</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:list-item-body>
										</fo:list-item>
										<fo:list-item>
											<fo:list-item-label end-indent="label-end()" text-align="right">
												<fo:block>
													<xsl:number format="1" value="3"/>.</fo:block>
											</fo:list-item-label>
											<fo:list-item-body start-indent="body-start()">
												<fo:block>
													<fo:inline>
														<xsl:text>OdchÃ½lne od Äasti F, Äl. 4, bod 3 VPPIKCP/0114 sa dojednÃ¡va, Å¾e ak je prÃ­Äinou stornovania smrÅ¥ poistenÃ©ho, vyplatÃ­ poisÅ¥ovateÄ¾ oprÃ¡vnenej osobe 100% stornopoplatku uplatnenÃ©ho poskytovateÄ¾om sluÅ¾by a ak je prÃ­Äinou stornovania smrÅ¥ blÃ­zkej osoby poistenÃ©ho, vyplatÃ­ poisÅ¥ovateÄ¾ poistenÃ©mu 100% stornopoplatku uplatnenÃ©ho poskytovateÄ¾om sluÅ¾by. PoisÅ¥ovateÄ¾ uhradÃ­ poistnÃ© plnenie podÄ¾a tohto bodu za 1 osobu maximÃ¡lne do vÃ½Å¡ky poistnej sumy uvedenej v bode 1 tÃ½chto zvlÃ¡Å¡tnych dojednanÃ­ a za vÅ¡etky osoby uvedenÃ© spolu v jednej poistnej zmluve a sÃºÄasne jednej zmluve o obstaranÃ­ zÃ¡jazdu maximÃ¡lne do vÃ½Å¡ky poistnej sumy uvedenej v bode 1 tÃ½chto zvlÃ¡Å¡tnych dojednanÃ­. V prÃ­pade poistnÃ©ho plnenia z jednej poistnej udalosti pre viacerÃ© poistenÃ© osoby sa poistnÃ© plnenie vyplÃ¡ca pomerne, v rovnakom pomere pre kaÅ¾dÃº poistenÃº osobu.</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:list-item-body>
										</fo:list-item>
									</fo:list-block>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block line-height="0.15in" text-align="justify" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
									<fo:inline font-size="0.15in" font-weight="bold">
										<xsl:text>IndividuÃ¡lne komplexnÃ© cestovnÃ© poistenie sa riadi VÅ¡eobecnÃ½mi poistnÃ½mi podmienkami individuÃ¡lneho komplexnÃ©ho cestovnÃ©ho poistenia VPPIKCP/0114, ktorÃ© sÃº k dispozÃ­cii na kontaktnÃ½ch miestach poisÅ¥ovateÄ¾a, na www.union.sk a na kontaktnÃ½ch miestach sprostredkovateÄ¾a. PoistnÃ­k svojim podpisom potvrdzuje, Å¾e mu boli VÅ¡eobecnÃ© poistnÃ© podmienky individuÃ¡lneho komplexnÃ©ho cestovnÃ©ho poistenia VPPIKCP/0114 oznÃ¡menÃ©.</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline font-size="0.15in">
										<xsl:text>SÃºÄasÅ¥ou tejto poistnej zmluvy je broÅ¾Ãºra s nÃ¡zvom âIndividuÃ¡lne komplexnÃ© cestovnÃ© poistenieâ. BroÅ¾Ãºra obsahuje na str. 1 prÃ­lohu k poistnej zmluve typu 701/702 s nÃ¡zvom âRozsah poistenia a vÃ½Å¡ka poistnÃ©ho krytia pre individuÃ¡lne komplexnÃ© cestovnÃ© poistenieâ, v ktorej je uvedenÃ½ obsah jednotlivÃ½ch poistenÃ­, poistnÃ© krytie a poistnÃ© sumy a vyhlÃ¡senia poistnÃ­ka a poistenÃ©ho. PoistnÃ­k svojim podpisom potvrdzuje, Å¾e sa s jej obsahom oboznÃ¡mil a sÃºhlasÃ­ s nÃ­m a potvrdzuje pravdivosÅ¥ svojich vyhlÃ¡senÃ­ v nej uvedenÃ½ch.</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline font-size="0.15in">
										<xsl:text>PoistnÃ­k svojÃ­m podpisom potvrdzuje, Å¾e mu bol pred uzavretÃ­m poistnej zmluvy odovzdanÃ½ formulÃ¡r o dÃ´leÅ¾itÃ½ch zmluvnÃ½ch podmienkach uzatvÃ¡ranej poistnej zmluvy.</xsl:text>
									</fo:inline>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.15in" line-height="0.15in" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
									<fo:inline font-weight="bold">
										<xsl:text>Miesto uzatvorenia poistnej zmluvy : </xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline font-weight="bold">
										<xsl:text>mandÃ¡tna zmluva Ä. / zmluva o obchodnom zastÃºpenÃ­ Ä .: </xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline font-weight="bold">
										<xsl:text>dÅa</xsl:text>
									</fo:inline>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table table-layout="fixed" width="100%" border-spacing="0">
									<fo:table-column column-width="50%"/>
									<fo:table-column column-width="50%"/>
									<xsl:variable name="altova:CurrContextGrid_107" select="."/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell keep-together.within-page="always" keep-together.within-column="always" padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>............................................................</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell keep-together.within-page="always" keep-together.within-column="always" padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>............................................................</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell keep-together.within-page="always" keep-together.within-column="always" padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline font-size="0.15in">
																<xsl:text>podpis poistnÃ­ka</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell keep-together.within-page="always" keep-together.within-column="always" padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline font-size="0.15in">
																<xsl:text>podpis a peÄiatka sprostredkovateÄ¾a</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.15in" line-height="0.15in" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
									<fo:inline font-weight="bold">
										<xsl:text>SÃºhlas so spracÃºvanÃ­m osobnÃ½ch Ãºdajov na ÃºÄely marketingovÃ½ch aktivÃ­t</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline>
										<xsl:text>V&#160; zmysle Â§ 11 zÃ¡kona Ä. 122/2013 Z.z. o ochrane osobnÃ½ch Ãºdajov v znenÃ­ neskorÅ¡Ã­ch predpisov a v zmysle Â§ 3 zÃ¡kona Ä. 147/2001 Z.z. o reklame a o zmene a doplnenÃ­ niektorÃ½ch zÃ¡konov v znenÃ­ neskorÅ¡Ã­ch predpisov sÃºhlasÃ­m:</xsl:text>
									</fo:inline>
									<fo:block/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.15in" line-height="0.15in" margin-left="0.21in" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
									<fo:inline>
										<xsl:text>-&#160; so spracÃºvanÃ­m osobnÃ½ch Ãºdajov na ÃºÄely marketingovÃ½ch aktivÃ­t, t.j. aby moje osobnÃ© Ãºdaje uvedenÃ© v tabuÄ¾ke PoistnÃ­k tejto poistky (okrem rodnÃ©ho ÄÃ­sla) boli spracÃºvanÃ© Union poisÅ¥ovÅou, a.s. na ÃºÄely marketingovÃ½ch aktivÃ­t a to najmÃ¤ ponÃºkanie produktov a s nimi sÃºvisiacich sluÅ¾ieb, zisÅ¥ovanie nÃ¡zorov na spokojnosÅ¥ s poskytovanÃ½mi sluÅ¾bami realizovanÃ½ch Union poisÅ¥ovÅou, a.s. alebo jej zmluvnÃ½mi partnermi. SÃºÄasne sÃºhlasÃ­m s pouÅ¾itÃ­m svojho telefÃ³nneho ÄÃ­sla a e-mailovej adresy&#160; na zasielanie marketingovÃ½ch sprÃ¡v formou elektronickej poÅ¡ty alebo formou sluÅ¾ieb krÃ¡tkych sprÃ¡v. SÃºhlas je poskytnutÃ½ na dobu poÄas trvania poistnej zmluvy a na dobu 10 rokov po ukonÄenÃ­ platnosti poistnÃ©ho vzÅ¥ahu.</xsl:text>
									</fo:inline>
									<fo:block/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin-left="0.21in" margin-top="0.05in" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table font-size="0.13in" table-layout="fixed" width="100%" border-spacing="2pt">
										<fo:table-column column-width="0.208in"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="0.208in"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<xsl:variable name="altova:CurrContextGrid_108" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell border="0.01in solid black" height="0.10in" padding="0.02in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="center">
																<xsl:if test="consentAndPaymentOption/agreeMarketingS=&apos;1&apos;">
																	<fo:inline>
																		<xsl:text>X</xsl:text>
																	</fo:inline>
																</xsl:if>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell padding="0.02in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-size="0.10in" font-weight="bold">
																	<xsl:text>&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:inline font-size="0.13in" font-weight="bold">
																	<xsl:text>Ã¡no (sÃºhlasÃ­m)</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="0.01in solid black" height="0.10in" padding="0.02in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="center">
																<xsl:if test="consentAndPaymentOption/agreeMarketingS=&apos;2&apos;">
																	<fo:inline>
																		<xsl:text>X</xsl:text>
																	</fo:inline>
																</xsl:if>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell padding="0.02in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-size="0.10in" font-weight="bold">
																	<xsl:text>&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:inline font-size="0.13in" font-weight="bold">
																	<xsl:text>nie (nesÃºhlasÃ­m)</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.15in" line-height="0.15in" margin-left="0.21in" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
									<fo:inline>
										<xsl:text>-&#160; s poskytnutÃ­m osobnÃ½ch Ãºdajov spoloÄnosti Union zdravotnÃ¡ poisÅ¥ovÅa, a.s., t.j. aby moje osobnÃ© Ãºdaje v rozsahu meno, priezvisko, titul, adresa trvalÃ©ho pobytu, dÃ¡tum narodenia, kontaktnÃ© ÄÃ­slo (telefÃ³nne ÄÃ­slo, faxovÃ© ÄÃ­slo, e-mailovÃ¡ adresa) boli poskytnutÃ© spoloÄnosti Union zdravotnÃ¡ poisÅ¥ovÅa, a.s. so sÃ­dlom BajkalskÃ¡ ul. 29/A, 821 08 Bratislava pre marketingovÃ© ÃºÄely. SÃºÄasne sÃºhlasÃ­m so&#160; zasielanÃ­m marketingovÃ½ch sprÃ¡v formou elektronickej poÅ¡ty alebo formou sluÅ¾ieb krÃ¡tkych sprÃ¡v. SÃºhlas je&#160; poskytnutÃ½&#160; do konca kalendÃ¡rneho roka po ukonÄenÃ­ platnosti tejto poistnej zmluvy.</xsl:text>
									</fo:inline>
									<fo:block/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin-left="0.21in" margin-top="0.05in" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table font-size="0.13in" table-layout="fixed" width="100%" border-spacing="2pt">
										<fo:table-column column-width="0.208in"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="0.208in"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<xsl:variable name="altova:CurrContextGrid_109" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell border="0.01in solid black" height="0.10in" padding="0.02in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="center">
																<xsl:if test="consentAndPaymentOption/agreeUnionzpS=&apos;1&apos;">
																	<fo:inline>
																		<xsl:text>X</xsl:text>
																	</fo:inline>
																</xsl:if>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell padding="0.02in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-size="0.10in" font-weight="bold">
																	<xsl:text>&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:inline font-size="0.13in" font-weight="bold">
																	<xsl:text>Ã¡no (sÃºhlasÃ­m)</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="0.01in solid black" height="0.10in" padding="0.02in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="center">
																<xsl:if test="consentAndPaymentOption/agreeUnionzpS=&apos;2&apos;">
																	<fo:inline>
																		<xsl:text>X</xsl:text>
																	</fo:inline>
																</xsl:if>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell padding="0.02in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-size="0.10in" font-weight="bold">
																	<xsl:text>&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:inline font-size="0.13in" font-weight="bold">
																	<xsl:text>nie (nesÃºhlasÃ­m)</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.15in" line-height="0.15in" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
									<fo:inline>
										<xsl:text>Poskytnutie osobnÃ½ch Ãºdajov na vyÅ¡Å¡ie uvedenÃ© ÃºÄely nie je povinnÃ©. PoistnÃ­k&#160; berie na vedomie, Å¾e sÃºhlas je moÅ¾nÃ© kedykoÄ¾vek odvolaÅ¥ a Å¾e odvolanie nemÃ¡ spÃ¤tnÃ© ÃºÄinky.</xsl:text>
									</fo:inline>
								</fo:block>
							</xsl:for-each>
						</xsl:for-each>
						<fo:block/>
						<fo:inline>
							<xsl:text>&#160;&#160;&#160; </xsl:text>
						</fo:inline>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="InsurerAddress">
		<xsl:for-each select="address">
			<xsl:for-each select="street">
				<xsl:variable name="value-of-template_110">
					<xsl:apply-templates/>
				</xsl:variable>
				<xsl:choose>
					<xsl:when test="contains(string($value-of-template_110),'&#x200B;')">
						<fo:block>
							<xsl:copy-of select="$value-of-template_110"/>
						</fo:block>
					</xsl:when>
					<xsl:otherwise>
						<fo:inline>
							<xsl:copy-of select="$value-of-template_110"/>
						</fo:inline>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:for-each>
			<fo:inline>
				<xsl:text> , </xsl:text>
			</fo:inline>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="altova:double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="altova:double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:MakeValueAbsoluteIfPixels">
		<xsl:param name="sValue"/>
		<xsl:variable name="sBeforePx" select="substring-before($sValue, 'px')"/>
		<xsl:choose>
			<xsl:when test="$sBeforePx">
				<xsl:variable name="nLengthOfInteger">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="$sBeforePx"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:variable name="nPosOfInteger" select="string-length($sBeforePx) - $nLengthOfInteger + 1"/>
				<xsl:variable name="nValuePx" select="substring($sBeforePx, $nPosOfInteger)"/>
				<xsl:variable name="nValueIn" select="number($nValuePx) div number($altova:nPxPerIn)"/>
				<xsl:variable name="nLengthBeforeInteger" select="string-length($sBeforePx) - $nLengthOfInteger"/>
				<xsl:variable name="sRest">
					<xsl:call-template name="altova:MakeValueAbsoluteIfPixels">
						<xsl:with-param name="sValue" select="substring-after($sValue, 'px')"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="concat(substring($sBeforePx, 1, $nLengthBeforeInteger), string($nValueIn), 'in', $sRest)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$sValue"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:GetCharCountOfIntegerAtEndOfString">
		<xsl:param name="sText"/>
		<xsl:variable name="sLen" select="string-length($sText)"/>
		<xsl:variable name="cLast" select="substring($sText, $sLen)"/>
		<xsl:choose>
			<xsl:when test="number($cLast) &gt;= 0 and number($cLast) &lt;= 9">
				<xsl:variable name="nResultOfRest">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="substring($sText, 1, $sLen - 1)"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="$nResultOfRest + 1"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>0</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
