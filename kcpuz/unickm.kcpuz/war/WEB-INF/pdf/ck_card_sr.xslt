<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2013 rel. 2 sp2 (x64) - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link sps xbrldi xbrli xlink xs xsi">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:decimal-format name="format1" grouping-separator=" " decimal-separator=","/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="page-master-0-even" margin-left="0.60in" margin-right="0.60in" page-height="11in" page-width="8.50in" margin-top="0.30in" margin-bottom="0.30in">
				<fo:region-body margin-top="-0.10in" margin-bottom="-0.20in" column-gap="0.50in"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-0-odd" margin-left="0.60in" margin-right="0.60in" page-height="11in" page-width="8.50in" margin-top="0.30in" margin-bottom="0.30in">
				<fo:region-body margin-top="-0.10in" margin-bottom="-0.20in" column-gap="0.50in"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-0">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-0-even" odd-or-even="even"/>
					<fo:conditional-page-master-reference master-reference="page-master-0-odd" odd-or-even="odd"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:declarations>
				<x:xmpmeta xmlns:x="adobe:ns:meta/">
					<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
						<rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
							<xmp:CreatorTool>Altova StyleVision Enterprise Edition 2013 rel. 2 sp2 (x64) (http://www.altova.com)</xmp:CreatorTool>
						</rdf:Description>
					</rdf:RDF>
				</x:xmpmeta>
			</fo:declarations>
			<fo:page-sequence force-page-count="no-force" master-reference="page-master-0" initial-page-number="auto" format="1">
				<fo:flow flow-name="xsl-region-body">
					<fo:block font-family="Arial">
						<xsl:for-each select="$XML">
							<xsl:for-each select="agreement">
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:external-graphic text-align="right" display-align="after" content-width="1.25in" scaling="non-uniform">
									<xsl:attribute name="src">
										<xsl:text>url(</xsl:text>
										<xsl:call-template name="altova:double-backslash">
											<xsl:with-param name="text">
												<xsl:value-of select="string(&apos;pdf_logo.jpg&apos;)"/>
											</xsl:with-param>
											<xsl:with-param name="text-length">
												<xsl:value-of select="string-length(string(&apos;pdf_logo.jpg&apos;))"/>
											</xsl:with-param>
										</xsl:call-template>
										<xsl:text>)</xsl:text>
									</xsl:attribute>
								</fo:external-graphic>
								<fo:inline>
									<xsl:text>&#x200B;</xsl:text>
								</fo:inline>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block background-color="silver" font-size="0.15in" padding="0.05in" text-align="center" margin-right="100% - 100%" font-weight="bold" space-before="0.83em" space-after="0.83em" margin="0pt">
									<fo:inline>
										<xsl:text>POTVRDENIE č. </xsl:text>
									</fo:inline>
									<xsl:for-each select="variableSymbol">
										<xsl:variable name="value-of-template_1">
											<xsl:apply-templates/>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="contains(string($value-of-template_1),'&#x200B;')">
												<fo:block>
													<xsl:copy-of select="$value-of-template_1"/>
												</fo:block>
											</xsl:when>
											<xsl:otherwise>
												<fo:inline>
													<xsl:copy-of select="$value-of-template_1"/>
												</fo:inline>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
								</fo:block>
								<xsl:choose>
									<xsl:when test="insurer/typ!=&apos;FO&apos;">
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" font-size="0.13in" table-layout="fixed" width="100%" border-spacing="2pt">
											<fo:table-column column-width="1.781in"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<xsl:variable name="altova:CurrContextGrid_2" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row height="0.16in">
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Meno a priezvisko / Názov</xsl:text>
																	</fo:inline>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" font-weight="normal" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="insurer">
																		<xsl:for-each select="companyName">
																			<xsl:variable name="value-of-template_3">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_3),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_3"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_3"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Rodné číslo / Dátum narodenia / IČO</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="insurer">
																		<xsl:for-each select="ico">
																			<xsl:variable name="value-of-template_4">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_4),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_4"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_4"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Adresa:</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="insurer">
																		<xsl:choose>
																			<xsl:when test="address/same=&apos;true&apos;">
																				<xsl:for-each select="address">
																					<xsl:for-each select="street">
																						<xsl:variable name="value-of-template_5">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_5),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_5"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_5"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="number">
																						<xsl:variable name="value-of-template_6">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_6),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_6"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_6"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>, </xsl:text>
																					</fo:inline>
																					<xsl:for-each select="psc">
																						<xsl:variable name="value-of-template_7">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_7),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_7"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_7"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="city">
																						<xsl:variable name="value-of-template_8">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_8),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_8"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_8"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:for-each select="postalAddress">
																					<xsl:for-each select="street">
																						<xsl:variable name="value-of-template_9">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_9),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_9"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_9"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="number">
																						<xsl:variable name="value-of-template_10">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_10),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_10"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_10"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="psc">
																						<xsl:variable name="value-of-template_11">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_11),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_11"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_11"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="city">
																						<xsl:variable name="value-of-template_12">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_12),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_12"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_12"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
									</xsl:when>
									<xsl:otherwise>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" font-size="0.13in" table-layout="fixed" width="100%" border-spacing="2pt">
											<fo:table-column column-width="1.781in"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<xsl:variable name="altova:CurrContextGrid_13" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row height="0.16in">
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Meno a priezvisko / Názov</xsl:text>
																	</fo:inline>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" font-weight="normal" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="insurer">
																		<xsl:for-each select="name">
																			<xsl:variable name="value-of-template_14">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_14),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_14"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_14"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																		<xsl:for-each select="surname">
																			<xsl:variable name="value-of-template_15">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_15),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_15"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_15"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Rodné číslo / Dátum narodenia / IČO</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="insurer">
																		<xsl:for-each select="rc">
																			<xsl:variable name="value-of-template_16">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_16),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_16"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_16"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Adresa / Adresa sídla:</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="insurer">
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																		<xsl:choose>
																			<xsl:when test="address/same=&apos;true&apos;">
																				<xsl:for-each select="address">
																					<xsl:for-each select="street">
																						<xsl:variable name="value-of-template_17">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_17),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_17"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_17"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="number">
																						<xsl:variable name="value-of-template_18">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_18),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_18"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_18"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>, </xsl:text>
																					</fo:inline>
																					<xsl:for-each select="psc">
																						<xsl:variable name="value-of-template_19">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_19),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_19"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_19"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="city">
																						<xsl:variable name="value-of-template_20">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_20),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_20"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_20"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:for-each select="postalAddress">
																					<xsl:for-each select="street">
																						<xsl:variable name="value-of-template_21">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_21),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_21"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_21"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="number">
																						<xsl:variable name="value-of-template_22">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_22),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_22"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_22"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="psc">
																						<xsl:variable name="value-of-template_23">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_23),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_23"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_23"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="city">
																						<xsl:variable name="value-of-template_24">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_24),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_24"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_24"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
									</xsl:otherwise>
								</xsl:choose>
								<fo:block/>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table font-size="0.13in" table-layout="fixed" width="100%" border-spacing="2pt">
									<fo:table-column column-width="50%"/>
									<fo:table-column column-width="50%"/>
									<xsl:variable name="altova:CurrContextGrid_25" select="."/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row height="0.16in">
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>uhradil platbou v hotovosti</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell font-weight="normal" padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:block>
																<fo:leader leader-pattern="space"/>
															</fo:block>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>sumu</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<xsl:for-each select="poistneSuma">
																<xsl:variable name="value-of-template_26">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template_26),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_26"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_26"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>slovami</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<xsl:for-each select="poistneSumaText">
																<xsl:variable name="value-of-template_27">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template_27),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_27"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_27"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>ako poistné k poistnej zmluve cestovného poistenia č.</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<xsl:for-each select="variableSymbol">
																<xsl:variable name="value-of-template_28">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template_28),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_28"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_28"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>uzavretej na dobu</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>od </xsl:text>
															</fo:inline>
															<xsl:for-each select="insuredFrom">
																<fo:inline>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</fo:inline>
															</xsl:for-each>
															<fo:inline>
																<xsl:text> do </xsl:text>
															</fo:inline>
															<xsl:for-each select="insuredTo">
																<fo:inline>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>&#160;</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline font-weight="bold">
																<xsl:text>názov sprostredkovateľa poistenia:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline font-weight="bold">
																<xsl:text>sídlo sprostredkovateľa poistenia:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline font-weight="bold">
																<xsl:text>dňa:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<xsl:for-each select="dateOfSigning">
																<fo:inline>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table font-size="0.13in" table-layout="fixed" width="100%" border-spacing="2pt">
									<fo:table-column column-width="2.080in"/>
									<fo:table-column column-width="2.200in"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<xsl:variable name="altova:CurrContextGrid_32" select="."/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="0.01in" padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; podpis a pečiatka príjemcu</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline font-size="0.13in">
									<xsl:text>------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</xsl:text>
								</fo:inline>
								<fo:block/>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:external-graphic text-align="right" display-align="after" content-width="1.25in" scaling="non-uniform">
									<xsl:attribute name="src">
										<xsl:text>url(</xsl:text>
										<xsl:call-template name="altova:double-backslash">
											<xsl:with-param name="text">
												<xsl:value-of select="string(&apos;pdf_logo.jpg&apos;)"/>
											</xsl:with-param>
											<xsl:with-param name="text-length">
												<xsl:value-of select="string-length(string(&apos;pdf_logo.jpg&apos;))"/>
											</xsl:with-param>
										</xsl:call-template>
										<xsl:text>)</xsl:text>
									</xsl:attribute>
								</fo:external-graphic>
								<fo:inline>
									<xsl:text>&#x200B;</xsl:text>
								</fo:inline>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block background-color="silver" font-size="0.15in" padding="0.05in" text-align="center" margin-right="100% - 100%" font-weight="bold" space-before="0.83em" space-after="0.83em" margin="0pt">
									<fo:inline>
										<xsl:text>POTVRDENIE č. </xsl:text>
									</fo:inline>
									<xsl:for-each select="variableSymbol">
										<xsl:variable name="value-of-template_33">
											<xsl:apply-templates/>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="contains(string($value-of-template_33),'&#x200B;')">
												<fo:block>
													<xsl:copy-of select="$value-of-template_33"/>
												</fo:block>
											</xsl:when>
											<xsl:otherwise>
												<fo:inline>
													<xsl:copy-of select="$value-of-template_33"/>
												</fo:inline>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<xsl:choose>
									<xsl:when test="insurer/typ!=&apos;FO&apos;">
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" font-size="0.13in" table-layout="fixed" width="100%" border-spacing="2pt">
											<fo:table-column column-width="1.781in"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<xsl:variable name="altova:CurrContextGrid_34" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row height="0.16in">
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Meno a priezvisko / Názov</xsl:text>
																	</fo:inline>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" font-weight="normal" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="insurer">
																		<xsl:for-each select="companyName">
																			<xsl:variable name="value-of-template_35">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_35),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_35"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_35"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Rodné číslo / Dátum narodenia / IČO</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="insurer">
																		<xsl:for-each select="ico">
																			<xsl:variable name="value-of-template_36">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_36),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_36"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_36"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Adresa:</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="insurer">
																		<xsl:choose>
																			<xsl:when test="address/same=&apos;true&apos;">
																				<xsl:for-each select="address">
																					<xsl:for-each select="street">
																						<xsl:variable name="value-of-template_37">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_37),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_37"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_37"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="number">
																						<xsl:variable name="value-of-template_38">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_38),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_38"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_38"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>, </xsl:text>
																					</fo:inline>
																					<xsl:for-each select="psc">
																						<xsl:variable name="value-of-template_39">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_39),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_39"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_39"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="city">
																						<xsl:variable name="value-of-template_40">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_40),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_40"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_40"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:for-each select="postalAddress">
																					<xsl:for-each select="street">
																						<xsl:variable name="value-of-template_41">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_41),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_41"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_41"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="number">
																						<xsl:variable name="value-of-template_42">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_42),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_42"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_42"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="psc">
																						<xsl:variable name="value-of-template_43">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_43),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_43"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_43"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="city">
																						<xsl:variable name="value-of-template_44">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_44),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_44"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_44"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
									</xsl:when>
									<xsl:otherwise>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" font-size="0.13in" table-layout="fixed" width="100%" border-spacing="2pt">
											<fo:table-column column-width="1.781in"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<xsl:variable name="altova:CurrContextGrid_45" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row height="0.16in">
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Meno a priezvisko / Názov</xsl:text>
																	</fo:inline>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" font-weight="normal" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="insurer">
																		<xsl:for-each select="name">
																			<xsl:variable name="value-of-template_46">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_46),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_46"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_46"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																		<xsl:for-each select="surname">
																			<xsl:variable name="value-of-template_47">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_47),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_47"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_47"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Rodné číslo / Dátum narodenia / IČO</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="insurer">
																		<xsl:for-each select="rc">
																			<xsl:variable name="value-of-template_48">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_48),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_48"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_48"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Adresa / Adresa sídla:</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="2pt" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="insurer">
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																		<xsl:choose>
																			<xsl:when test="address/same=&apos;true&apos;">
																				<xsl:for-each select="address">
																					<xsl:for-each select="street">
																						<xsl:variable name="value-of-template_49">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_49),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_49"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_49"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="number">
																						<xsl:variable name="value-of-template_50">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_50),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_50"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_50"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>, </xsl:text>
																					</fo:inline>
																					<xsl:for-each select="psc">
																						<xsl:variable name="value-of-template_51">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_51),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_51"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_51"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="city">
																						<xsl:variable name="value-of-template_52">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_52),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_52"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_52"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:for-each select="postalAddress">
																					<xsl:for-each select="street">
																						<xsl:variable name="value-of-template_53">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_53),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_53"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_53"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="number">
																						<xsl:variable name="value-of-template_54">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_54),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_54"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_54"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="psc">
																						<xsl:variable name="value-of-template_55">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_55),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_55"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_55"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="city">
																						<xsl:variable name="value-of-template_56">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_56),'&#x200B;')">
																								<fo:block font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_56"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-size="0.13in">
																									<xsl:copy-of select="$value-of-template_56"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
									</xsl:otherwise>
								</xsl:choose>
								<fo:block/>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table font-size="0.13in" table-layout="fixed" width="100%" border-spacing="2pt">
									<fo:table-column column-width="50%"/>
									<fo:table-column column-width="50%"/>
									<xsl:variable name="altova:CurrContextGrid_57" select="."/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row height="0.16in">
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>uhradil platbou v hotovosti</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell font-weight="normal" padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:block>
																<fo:leader leader-pattern="space"/>
															</fo:block>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>sumu</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<xsl:for-each select="poistneSuma">
																<xsl:variable name="value-of-template_58">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template_58),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_58"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_58"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>slovami</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<xsl:for-each select="poistneSumaText">
																<xsl:variable name="value-of-template_59">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template_59),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_59"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_59"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>ako poistné k poistnej zmluve cestovného poistenia č.</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<xsl:for-each select="variableSymbol">
																<xsl:variable name="value-of-template_60">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template_60),'&#x200B;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template_60"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template_60"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>uzavretej na dobu</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>od </xsl:text>
															</fo:inline>
															<xsl:for-each select="insuredFrom">
																<fo:inline>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</fo:inline>
															</xsl:for-each>
															<fo:inline>
																<xsl:text> do </xsl:text>
															</fo:inline>
															<xsl:for-each select="insuredTo">
																<fo:inline>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>&#160;</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline font-weight="bold">
																<xsl:text>názov sprostredkovateľa poistenia:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline font-weight="bold">
																<xsl:text>sídlo sprostredkovateľa poistenia:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline font-weight="bold">
																<xsl:text>dňa:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<xsl:for-each select="dateOfSigning">
																<fo:inline>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>.</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table font-size="0.13in" table-layout="fixed" width="100%" border-spacing="2pt">
									<fo:table-column column-width="2.080in"/>
									<fo:table-column column-width="2.200in"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<xsl:variable name="altova:CurrContextGrid_64" select="."/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="0.01in" padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:inline>
																<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; podpis a pečiatka príjemcu</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
							</xsl:for-each>
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="altova:double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="altova:double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:MakeValueAbsoluteIfPixels">
		<xsl:param name="sValue"/>
		<xsl:variable name="sBeforePx" select="substring-before($sValue, 'px')"/>
		<xsl:choose>
			<xsl:when test="$sBeforePx">
				<xsl:variable name="nLengthOfInteger">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="$sBeforePx"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:variable name="nPosOfInteger" select="string-length($sBeforePx) - $nLengthOfInteger + 1"/>
				<xsl:variable name="nValuePx" select="substring($sBeforePx, $nPosOfInteger)"/>
				<xsl:variable name="nValueIn" select="number($nValuePx) div number($altova:nPxPerIn)"/>
				<xsl:variable name="nLengthBeforeInteger" select="string-length($sBeforePx) - $nLengthOfInteger"/>
				<xsl:variable name="sRest">
					<xsl:call-template name="altova:MakeValueAbsoluteIfPixels">
						<xsl:with-param name="sValue" select="substring-after($sValue, 'px')"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="concat(substring($sBeforePx, 1, $nLengthBeforeInteger), string($nValueIn), 'in', $sRest)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$sValue"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:GetCharCountOfIntegerAtEndOfString">
		<xsl:param name="sText"/>
		<xsl:variable name="sLen" select="string-length($sText)"/>
		<xsl:variable name="cLast" select="substring($sText, $sLen)"/>
		<xsl:choose>
			<xsl:when test="number($cLast) &gt;= 0 and number($cLast) &lt;= 9">
				<xsl:variable name="nResultOfRest">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="substring($sText, 1, $sLen - 1)"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="$nResultOfRest + 1"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>0</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
