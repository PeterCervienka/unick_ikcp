<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2013 rel. 2 sp2 (x64) - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link sps xbrldi xbrli xlink xs xsi">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:decimal-format name="format1" grouping-separator=" " decimal-separator=","/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="page-master-0-even" margin-left="0.30in" margin-right="0.30in" page-height="11in" page-width="8.50in" margin-top="0.30in" margin-bottom="0.30in">
				<fo:region-body margin-top="-0.10in" margin-bottom="-0.20in" column-gap="0.50in"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-0-odd" margin-left="0.30in" margin-right="0.30in" page-height="11in" page-width="8.50in" margin-top="0.30in" margin-bottom="0.30in">
				<fo:region-body margin-top="-0.10in" margin-bottom="-0.20in" column-gap="0.50in"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-0">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-0-even" odd-or-even="even"/>
					<fo:conditional-page-master-reference master-reference="page-master-0-odd" odd-or-even="odd"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:declarations>
				<x:xmpmeta xmlns:x="adobe:ns:meta/">
					<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
						<rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
							<xmp:CreatorTool>Altova StyleVision Enterprise Edition 2013 rel. 2 sp2 (x64) (http://www.altova.com)</xmp:CreatorTool>
						</rdf:Description>
					</rdf:RDF>
				</x:xmpmeta>
			</fo:declarations>
			<fo:page-sequence force-page-count="no-force" master-reference="page-master-0" initial-page-number="auto" format="1">
				<fo:flow flow-name="xsl-region-body">
					<fo:block font-family="Arial" line-height="1.4">
						<xsl:for-each select="$XML">
							<xsl:for-each select="agreement">
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table table-layout="fixed" width="100%" border-spacing="0">
									<fo:table-column column-width="25%"/>
									<fo:table-column column-width="60%"/>
									<fo:table-column column-width="15%"/>
									<xsl:variable name="altova:CurrContextGrid_1" select="."/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left">
															<fo:external-graphic text-align="right" display-align="after" content-width="2.08in" scaling="non-uniform">
																<xsl:attribute name="src">
																	<xsl:text>url(</xsl:text>
																	<xsl:call-template name="altova:double-backslash">
																		<xsl:with-param name="text">
																			<xsl:value-of select="string(&apos;pdf_logo.jpg&apos;)"/>
																		</xsl:with-param>
																		<xsl:with-param name="text-length">
																			<xsl:value-of select="string-length(string(&apos;pdf_logo.jpg&apos;))"/>
																		</xsl:with-param>
																	</xsl:call-template>
																	<xsl:text>)</xsl:text>
																</xsl:attribute>
															</fo:external-graphic>
															<fo:inline>
																<xsl:text>&#x200B;</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="center">
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x200B;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block font-size="0.17in" margin="0" padding="0" text-align="center" display-align="before" margin-left="0 + (100% - 100%) div 2" font-weight="bold" space-before="0.83em" space-after="0.83em">
																<fo:inline font-family="Arial" font-weight="bold" text-align="center">
																	<xsl:text>Poistná zmluva č.&#160; </xsl:text>
																</fo:inline>
																<xsl:for-each select="variableSymbol">
																	<xsl:variable name="value-of-template_2">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_2),'&#x200B;')">
																			<fo:block font-weight="bold">
																				<xsl:copy-of select="$value-of-template_2"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-weight="bold">
																				<xsl:copy-of select="$value-of-template_2"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:block/>
																<fo:inline>
																	<xsl:text>o komplexnom cestovnom poistení pre účastníkov zájazdov</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block>
													</fo:block-container>
												</fo:table-cell>
												<fo:table-cell padding="0" display-align="center">
													<fo:block-container overflow="hidden">
														<fo:block text-align="left"/>
													</fo:block-container>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.13in" font-weight="normal" text-align="left" margin-right="100% - 100%" margin="0pt">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table table-layout="fixed" width="100%" border-spacing="0">
										<fo:table-column column-width="15%"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<xsl:variable name="altova:CurrContextGrid_3" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell padding="0" display-align="before">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>Poisťovateľ:</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell padding="0" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>Union poisťovňa, a.s., Bajkalská 29/A, 813 60 Bratislava, Slovenská republika,</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:text>IČO: 31322051, DIČ: 2020800353, zapísaná v Obchodnom registri Okresného súdu</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:text>Bratislava I, odd. Sa, vl.č. 383/B</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:text>účet č.: 6600547090/1111, IBAN SK59 1111 0000 0066 0054 7090, BIC UNCRSKBX</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:text>vedený v UniCredit Bank Czech Republic and Slovakia, a.s., organizačná zložka: UniCredit</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:text>Bank Czech Republic and Slovakia, a.s., pobočka zahraničnej banky</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.13in" line-height="1.2" margin="0" padding="0" margin-right="0 + 100% - 100%" space-before="0" space-after="0">
									<fo:inline font-weight="bold">
										<xsl:text>Poistený/í</xsl:text>
									</fo:inline>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<xsl:if test="insuredPersons">
										<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
											<fo:table-column column-width="70%"/>
											<fo:table-column column-width="30%"/>
											<xsl:variable name="altova:CurrContextGrid_4" select="."/>
											<fo:table-header start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" font-weight="bold" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Meno a priezvisko</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" font-weight="bold" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:text>Dátum narodenia / </xsl:text>
																	</fo:inline>
																	<fo:inline font-weight="bold">
																		<xsl:text>Rodné číslo</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-header>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<xsl:for-each select="insuredPersons">
														<xsl:for-each select="person">
															<fo:table-row>
																<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:for-each select="name">
																				<xsl:variable name="value-of-template_5">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_5),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_5"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_5"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																			<fo:inline>
																				<xsl:text>&#160;</xsl:text>
																			</fo:inline>
																			<xsl:for-each select="surname">
																				<xsl:variable name="value-of-template_6">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_6),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_6"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_6"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
																<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
																	<fo:block-container overflow="hidden">
																		<fo:block text-align="left">
																			<xsl:for-each select="birthDate">
																				<fo:inline>
																					<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																					<xsl:text>. </xsl:text>
																					<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																					<xsl:text>. </xsl:text>
																					<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																				</fo:inline>
																			</xsl:for-each>
																		</fo:block>
																	</fo:block-container>
																</fo:table-cell>
															</fo:table-row>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
									</xsl:if>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.13in" line-height="1.2" margin="0" padding="0" margin-right="0 + 100% - 100%" space-before="0" space-after="0">
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline font-weight="bold">
										<xsl:text>Poistník</xsl:text>
									</fo:inline>
									<fo:inline>
										<xsl:text> (osoba, ktorá podpisuje poistnú zmluvu a platí poistné)</xsl:text>
									</fo:inline>
									<fo:block/>
									<xsl:for-each select="insurer">
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
											<fo:table-column column-width="25%"/>
											<fo:table-column column-width="25%"/>
											<fo:table-column column-width="15%"/>
											<fo:table-column column-width="15%"/>
											<fo:table-column column-width="20%"/>
											<xsl:variable name="altova:CurrContextGrid_8" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Meno a priezvisko / Názov</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Adresa trvalého bydliska/ Adresa sídla</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Rodné číslo / Dátum narodenia /&#160; IČO</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>Telefónne číslo</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-weight="bold">
																		<xsl:text>E-mailová adresa</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:choose>
																		<xsl:when test="typ=&apos;FO&apos;">
																			<xsl:for-each select="title">
																				<xsl:variable name="value-of-template_9">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_9),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_9"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_9"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																			</xsl:for-each>
																			<xsl:for-each select="name">
																				<xsl:variable name="value-of-template_10">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_10),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_10"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_10"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																			</xsl:for-each>
																			<xsl:for-each select="surname">
																				<xsl:variable name="value-of-template_11">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_11),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_11"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_11"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:for-each select="companyName">
																				<xsl:variable name="value-of-template_12">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_12),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_12"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_12"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="address">
																		<xsl:for-each select="street">
																			<xsl:variable name="value-of-template_13">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_13),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_13"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_13"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<xsl:for-each select="number">
																			<fo:inline>
																				<xsl:text>&#160;</xsl:text>
																			</fo:inline>
																			<xsl:variable name="value-of-template_14">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_14),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_14"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_14"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:inline>
																			<xsl:text>, </xsl:text>
																		</fo:inline>
																		<xsl:for-each select="psc">
																			<xsl:variable name="value-of-template_15">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_15),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_15"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_15"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																		<xsl:for-each select="city">
																			<xsl:variable name="value-of-template_16">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_16),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_16"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_16"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:choose>
																		<xsl:when test="typ=&apos;FO&apos;">
																			<xsl:for-each select="rc">
																				<xsl:variable name="value-of-template_17">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_17),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_17"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_17"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:for-each select="ico">
																				<xsl:variable name="value-of-template_18">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_18),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_18"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_18"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="phone">
																		<xsl:variable name="value-of-template_19">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_19),'&#x200B;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template_19"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template_19"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="email">
																		<xsl:variable name="value-of-template_20">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_20),'&#x200B;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template_20"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template_20"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
									</xsl:for-each>
									<xsl:for-each select="insurer">
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline font-size="0.13in" font-weight="bold">
											<xsl:text>Korešpondenčná adresa</xsl:text>
										</fo:inline>
										<fo:inline font-size="0.13in">
											<xsl:text> (adresa, na ktorú sa doručujú písomnosti)</xsl:text>
										</fo:inline>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
											<fo:table-column column-width="25%"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<xsl:variable name="altova:CurrContextGrid_21" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-size="0.13in" font-weight="bold">
																		<xsl:text>Meno a priezvisko / Názov</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline font-size="0.13in" font-weight="bold">
																		<xsl:text>Korešpondenčná adresa</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:choose>
																		<xsl:when test="typ=&apos;FO&apos;">
																			<xsl:for-each select="title">
																				<xsl:variable name="value-of-template_22">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_22),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_22"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_22"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																			</xsl:for-each>
																			<xsl:for-each select="name">
																				<xsl:variable name="value-of-template_23">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_23),'&#x200B;')">
																						<fo:block font-size="0.13in">
																							<xsl:copy-of select="$value-of-template_23"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline font-size="0.13in">
																							<xsl:copy-of select="$value-of-template_23"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																				<fo:inline font-size="0.13in">
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																			</xsl:for-each>
																			<xsl:for-each select="surname">
																				<xsl:variable name="value-of-template_24">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_24),'&#x200B;')">
																						<fo:block font-size="0.13in">
																							<xsl:copy-of select="$value-of-template_24"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline font-size="0.13in">
																							<xsl:copy-of select="$value-of-template_24"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:for-each select="companyName">
																				<xsl:variable name="value-of-template_25">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_25),'&#x200B;')">
																						<fo:block font-size="0.13in">
																							<xsl:copy-of select="$value-of-template_25"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline font-size="0.13in">
																							<xsl:copy-of select="$value-of-template_25"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="0.01in solid black" padding="5" display-align="center">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:choose>
																		<xsl:when test="address/same=&apos;true&apos;">
																			<xsl:for-each select="address">
																				<xsl:for-each select="street">
																					<xsl:variable name="value-of-template_26">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_26),'&#x200B;')">
																							<fo:block font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_26"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_26"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="number">
																					<xsl:variable name="value-of-template_27">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_27),'&#x200B;')">
																							<fo:block font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_27"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_27"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="psc">
																					<xsl:variable name="value-of-template_28">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_28),'&#x200B;')">
																							<fo:block font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_28"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_28"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="city">
																					<xsl:variable name="value-of-template_29">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_29),'&#x200B;')">
																							<fo:block font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_29"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_29"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:for-each select="postalAddress">
																				<xsl:for-each select="street">
																					<xsl:variable name="value-of-template_30">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_30),'&#x200B;')">
																							<fo:block font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_30"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_30"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="number">
																					<xsl:variable name="value-of-template_31">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_31),'&#x200B;')">
																							<fo:block font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_31"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_31"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="psc">
																					<xsl:variable name="value-of-template_32">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_32),'&#x200B;')">
																							<fo:block font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_32"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_32"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="city">
																					<xsl:variable name="value-of-template_33">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_33),'&#x200B;')">
																							<fo:block font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_33"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-size="0.13in">
																								<xsl:copy-of select="$value-of-template_33"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
									</xsl:for-each>
									<fo:block/>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.13in" line-height="1.2" margin="0" padding="0" margin-right="0 + 100% - 100%" space-before="0" space-after="0">
									<fo:inline font-size="0.13in" font-weight="bold">
										<xsl:text>Na uvedené osoby sa vzťahuje poistenie</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
										<fo:table-column column-width="25%"/>
										<fo:table-column column-width="35%"/>
										<fo:table-column column-width="20%"/>
										<fo:table-column column-width="20%"/>
										<xsl:variable name="altova:CurrContextGrid_34" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell border-bottom="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>Dátum a čas uzavretia </xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-bottom="0.01in solid black" border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<xsl:for-each select="dateOfSigning">
																	<fo:inline>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	</fo:inline>
																</xsl:for-each>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell number-columns-spanned="2" border-bottom="0.01in solid black" border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<xsl:for-each select="dateOfSigning">
																	<fo:inline>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 12, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 15, 2)), '00', 'format1')"/>
																		<xsl:text>:</xsl:text>
																		<xsl:choose>
																			<xsl:when test="contains(string(string(.)), 'Z')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), 'Z'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(string(string(.)), '+')">
																				<xsl:value-of select="format-number(number(substring-after(substring-after(substring-before(string(string(.)), '+'), ':'), ':')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:when test="contains(substring(string(string(.)), 18), '-')">
																				<xsl:value-of select="format-number(number(substring-before(substring(string(string(.)), 18), '-')), '00', 'format1')"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 18)), '00', 'format1')"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</fo:inline>
																</xsl:for-each>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell border-bottom="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>Platnosť poistenia </xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-bottom="0.01in solid black" border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>od </xsl:text>
																</fo:inline>
																<xsl:for-each select="insuredFrom">
																	<fo:inline>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	</fo:inline>
																</xsl:for-each>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-bottom="0.01in solid black" border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>do </xsl:text>
																</fo:inline>
																<xsl:for-each select="insuredTo">
																	<fo:inline>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																		<xsl:text>.</xsl:text>
																		<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																	</fo:inline>
																</xsl:for-each>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-bottom="0.01in solid black" border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>na </xsl:text>
																</fo:inline>
																<xsl:for-each select="insuredDays">
																	<xsl:variable name="value-of-template_39">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_39),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_39"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_39"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:choose>
																	<xsl:when test="insuredDays=&apos;1&apos;">
																		<fo:inline>
																			<xsl:text>deň</xsl:text>
																		</fo:inline>
																	</xsl:when>
																	<xsl:when test="insuredDays=&apos;2&apos; or insuredDays=&apos;3&apos; or insuredDays=&apos;4&apos;">
																		<fo:inline>
																			<xsl:text>dni</xsl:text>
																		</fo:inline>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:text>dní</xsl:text>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell border-bottom="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>Územná platnosť poistenia</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell number-columns-spanned="3" border-bottom="0.01in solid black" border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<xsl:if test="country=&apos;E&apos;">
																	<fo:inline>
																		<xsl:text>Európa</xsl:text>
																	</fo:inline>
																</xsl:if>
																<xsl:if test="country=&apos;S&apos;">
																	<fo:inline>
																		<xsl:text>Svet</xsl:text>
																	</fo:inline>
																</xsl:if>
																<xsl:if test="country=&apos;SR&apos;">
																	<fo:inline>
																		<xsl:text>Slovensko</xsl:text>
																	</fo:inline>
																</xsl:if>
																<xsl:if test="country=&apos;M&apos;">
																	<fo:inline>
																		<xsl:text>Mimo Európy</xsl:text>
																	</fo:inline>
																</xsl:if>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell border-bottom="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>Riziková skupina</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell number-columns-spanned="3" border-bottom="0.01in solid black" border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<xsl:choose>
																	<xsl:when test="riskGroupSport=&apos;true&apos;">
																		<fo:inline>
																			<xsl:text>Šport</xsl:text>
																		</fo:inline>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:text>Turista</xsl:text>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>Typ zájazdu</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<xsl:choose>
																	<xsl:when test="country=&apos;SR&apos;">
																		<fo:inline>
																			<xsl:text>tuzemský</xsl:text>
																		</fo:inline>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:text>zahraničný</xsl:text>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>Typ poistenia</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<xsl:for-each select="pack">
																	<xsl:variable name="value-of-template_40">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_40),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_40"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_40"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.13in" line-height="1.2" margin="0" padding="0" margin-right="0 + 100% - 100%" space-before="0" space-after="0">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table border="0.01in solid black" table-layout="fixed" width="100%" border-spacing="0">
										<fo:table-column column-width="25%"/>
										<fo:table-column column-width="75%"/>
										<xsl:variable name="altova:CurrContextGrid_41" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>Sadzba poistného </xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="rateAdults">
																	<xsl:variable name="value-of-template_42">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_42),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_42"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_42"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text> EUR / osoba / deň - dospelí</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<xsl:choose>
													<xsl:when test="childrenCount &gt; 0">
														<fo:table-row>
															<fo:table-cell padding="0" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left"/>
																</fo:block-container>
															</fo:table-cell>
															<fo:table-cell border-left="0.01in solid black" padding="0.05in" display-align="center">
																<fo:block-container overflow="hidden">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																		<xsl:for-each select="rateChildren">
																			<xsl:variable name="value-of-template_43">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_43),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_43"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_43"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:inline>
																			<xsl:text> EUR / osoba / deň - dieťa do 15 rokov</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block-container>
															</fo:table-cell>
														</fo:table-row>
													</xsl:when>
													<xsl:otherwise/>
												</xsl:choose>
												<fo:table-row>
													<fo:table-cell border-top="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-weight="bold">
																	<xsl:text>POISTNÉ SPOLU </xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border-left="0.01in solid black" border-top="0.01in solid black" padding="0.05in" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="poistneSuma">
																	<xsl:variable name="value-of-template_44">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_44),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_44"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_44"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text> EUR</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.13in" margin="0.00in" padding="0.00in" text-align="justify" margin-right="0.00in + 100% - 100%" space-before="0" space-after="0">
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline>
										<xsl:text>Poistné je jednorazové, splatné naraz dňom uzavretia tejto poistnej zmluvy. Súčasťou tejto poistnej zmluvy je brožúra s názvom „Komplexné cestovné poistenie pre účastníkov zájazdov“. Brožúra obsahuje Všeobecné poistné podmienky komplexného cestovného poistenia pre účastníkov zájazdov VPPKCPUZ/0114, ktorými sa poistenie riadi, vyhlásenia poistníka a poisteného a prílohu k poistnej zmluve typu 711/712 s názvom „Rozsah poistenia a výška poistného krytia&quot;, v ktorej je uvedený obsah jednotlivých druhov poistenia a poistné sumy. Poistník svojim podpisom potvrdzuje, že sa s jej obsahom oboznámil a súhlasí s ním a potvrdzuje pravdivosť svojich vyhlásení v nej uvedených.</xsl:text>
									</fo:inline>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block font-size="0.13in" margin="0.00in" padding="0.00in" text-align="justify" margin-right="0.00in + 100% - 100%" space-before="0" space-after="0">
									<fo:inline>
										<xsl:text> Poistník svojím podpisom potvrdzuje, že mu bol pred uzavretím poistnej zmluvy odovzdaný formulár o dôležitých zmluvných podmienkach uzatváranej poistnej zmluvy.</xsl:text>
									</fo:inline>
									<fo:block/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block keep-together.within-page="always" keep-together.within-column="always" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
									<fo:inline font-size="small" font-weight="bold">
										<xsl:text>Miesto uzatvorenia poistnej zmluvy:</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline font-size="small" font-weight="bold">
										<xsl:text>mandátna zmluva č./ zmluva o obchodnom zastúpení č.:</xsl:text>
									</fo:inline>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table font-size="0.13in" table-layout="fixed" width="100%" border-spacing="5">
										<fo:table-column column-width="50%"/>
										<fo:table-column column-width="50%"/>
										<xsl:variable name="altova:CurrContextGrid_45" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row text-align="center">
													<fo:table-cell padding="5" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="center">
																<fo:block>
																	<fo:leader leader-pattern="space"/>
																</fo:block>
																<fo:block>
																	<fo:leader leader-pattern="space"/>
																</fo:block>
																<fo:inline font-size="0.13in">
																	<xsl:text>-----------------------------------------------</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:text>podpis poistníka</xsl:text>
																</fo:inline>
																<fo:block/>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell padding="5" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="center">
																<fo:block>
																	<fo:leader leader-pattern="space"/>
																</fo:block>
																<fo:block>
																	<fo:leader leader-pattern="space"/>
																</fo:block>
																<fo:inline font-size="0.13in">
																	<xsl:text>-----------------------------------------------------------------------</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="0.13in">
																	<xsl:text>podpis a pečiatka sprostredkovateľa</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
							</xsl:for-each>
						</xsl:for-each>
						<fo:block/>
						<fo:inline>
							<xsl:text>&#160;&#160;&#160; </xsl:text>
						</fo:inline>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="InsurerAddress">
		<xsl:for-each select="address">
			<xsl:for-each select="street">
				<xsl:variable name="value-of-template_46">
					<xsl:apply-templates/>
				</xsl:variable>
				<xsl:choose>
					<xsl:when test="contains(string($value-of-template_46),'&#x200B;')">
						<fo:block>
							<xsl:copy-of select="$value-of-template_46"/>
						</fo:block>
					</xsl:when>
					<xsl:otherwise>
						<fo:inline>
							<xsl:copy-of select="$value-of-template_46"/>
						</fo:inline>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:for-each>
			<fo:inline>
				<xsl:text> , </xsl:text>
			</fo:inline>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="altova:double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="altova:double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:MakeValueAbsoluteIfPixels">
		<xsl:param name="sValue"/>
		<xsl:variable name="sBeforePx" select="substring-before($sValue, 'px')"/>
		<xsl:choose>
			<xsl:when test="$sBeforePx">
				<xsl:variable name="nLengthOfInteger">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="$sBeforePx"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:variable name="nPosOfInteger" select="string-length($sBeforePx) - $nLengthOfInteger + 1"/>
				<xsl:variable name="nValuePx" select="substring($sBeforePx, $nPosOfInteger)"/>
				<xsl:variable name="nValueIn" select="number($nValuePx) div number($altova:nPxPerIn)"/>
				<xsl:variable name="nLengthBeforeInteger" select="string-length($sBeforePx) - $nLengthOfInteger"/>
				<xsl:variable name="sRest">
					<xsl:call-template name="altova:MakeValueAbsoluteIfPixels">
						<xsl:with-param name="sValue" select="substring-after($sValue, 'px')"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="concat(substring($sBeforePx, 1, $nLengthBeforeInteger), string($nValueIn), 'in', $sRest)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$sValue"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:GetCharCountOfIntegerAtEndOfString">
		<xsl:param name="sText"/>
		<xsl:variable name="sLen" select="string-length($sText)"/>
		<xsl:variable name="cLast" select="substring($sText, $sLen)"/>
		<xsl:choose>
			<xsl:when test="number($cLast) &gt;= 0 and number($cLast) &lt;= 9">
				<xsl:variable name="nResultOfRest">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="substring($sText, 1, $sLen - 1)"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="$nResultOfRest + 1"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>0</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
